var contract;
var account = null;
var web3;


var actionDesc;
//true for modal main
var modalDecision = true;

var startDate;



var contractAddress = "";
const bc = '';
const abi = JSON.parse('[  {   "inputs": [    {     "internalType": "string",     "name": "_dataScientistModelName",     "type": "string"    },    {     "internalType": "uint256",     "name": "_costETH",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_dataScientistStakePromise",     "type": "uint256"    }   ],   "stateMutability": "nonpayable",   "type": "constructor"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "BuyerModelNameRegistered",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "bytes32",     "name": "id",     "type": "bytes32"    }   ],   "name": "ChainlinkCancelled",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "bytes32",     "name": "id",     "type": "bytes32"    }   ],   "name": "ChainlinkFulfilled",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "bytes32",     "name": "id",     "type": "bytes32"    }   ],   "name": "ChainlinkRequested",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "Claimed",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "Constructed",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    }   ],   "name": "Kicked",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    },    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    }   ],   "name": "Locked",   "type": "event"  },  {   "anonymous": false,   "inputs": [],   "name": "Reclaimed",   "type": "event"  },  {   "inputs": [],   "name": "birthStamp",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "buyer",   "outputs": [    {     "internalType": "address payable",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "buyerModelId",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "buyerModelName",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "claim",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "costETH",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistModelId",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistModelName",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistStakeActual",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistStakePromise",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "bytes32",     "name": "_APIresult",     "type": "bytes32"    }   ],   "name": "fulfillBuyerModelId",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "uint256",     "name": "_APIresult",     "type": "uint256"    }   ],   "name": "fulfillDataScientistStake",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "int256",     "name": "_APIresult",     "type": "int256"    }   ],   "name": "fulfillFloat",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "int256",     "name": "_APIresult",     "type": "int256"    }   ],   "name": "fulfillGetPayoutPending",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "uint256",     "name": "_APIresult",     "type": "uint256"    }   ],   "name": "fulfillLatestSubmissionRound",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "uint256",     "name": "_APIresult",     "type": "uint256"    }   ],   "name": "fulfillRoundNumber",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getHour",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getMinute",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getSecond",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getWeekday",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [],   "name": "kick",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "latestSubmissionCounter",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "latestSubmissionRounds",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "lock",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "locked",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "metricNames",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "metrics",   "outputs": [    {     "internalType": "int256",     "name": "",     "type": "int256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "modelNames",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "owner",   "outputs": [    {     "internalType": "address payable",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "reclaim",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "string",     "name": "_buyerModelName",     "type": "string"    }   ],   "name": "registerBuyerModelName",   "outputs": [],   "stateMutability": "payable",   "type": "function"  },  {   "inputs": [],   "name": "roundNumber",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "startTimestamp",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "totalFee",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "verified",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  } ]');

function modalPrimary() {
    modalDecision = true;
    console.log(modalDecision);
    $('#gasEstimationFailedModal').modal('toggle');
}

function modalSecondary() {
    modalDecision = false;
    console.log(modalDecision);
    $('#gasEstimationFailedModal').modal('toggle');
}

function setup() {
    console.log("SETUP");
    console.log(window.ethereum);
    if (window.ethereum) {

        console.log("E");
        window.ethereum.enable();

        web3 = new Web3(window.ethereum);
        console.log(web3.eth.accounts.length);
        console.log("A");
        console.log(web3);
        if (!web3) {
            console.log("NW3");
            $('#metaMaskRequiredModal').modal('toggle');
            return;
        }

        console.log("IF REACHED");
        console.log(web3.eth.accounts[0]);
        console.log(account);
        if (web3.eth.accounts[0] !== account) {
            console.log("IF REACHED2");
            console.log("F");
            web3.eth.getAccounts(function(err, accounts) {
                if (err != null) {
                    console.log("D2");
                    //alert("Error retrieving accounts.");
                    $('#metaMaskRequiredModal').modal();
                    return;

                }
                if (accounts.length == 0) {
                    console.log("D");
                    $('#metaMaskRequiredModal').modal();
                    return;
                }

                account = accounts[0];

                console.log('Account: ' + account);
                web3.eth.defaultAccount = account;
            });

        } else {
            console.log("IF12 REACHED");
        }


    } else {
        console.log("IF3 REACHED");
        console.log("No metamask");

        $('#metaMaskRequiredModal').modal('toggle');
        return;
    }


} //, 100);


function setUpCheck(viewB) {
    console.log(viewB);
    if (!web3) {
        console.log("not web3");
        $('#metaMaskRequiredModal').modal('toggle');
        return false;
    }
    if (window.ethereum) {
        console.log("wind eth");
        console.log("webeth");
    } else {
        console.log("not wind eth");
        $('#metaMaskRequiredModal').modal('toggle');
        return false;
    }
    if (!viewB && !contract) {

      console.log(viewB);
        console.log("not view not cont");
        $('#contractRequiredModal').modal('toggle');
        return false;
    }
    console.log("true ret");
    return true;
}

function retreiveContract() {

    console.log("true retA");
    if (!setUpCheck(true)) {
        return;
    }
    console.log("true retB");
    contractAddress = $("#newInfo").val().trim();
    contract = new web3.eth.Contract(abi, $("#newInfo").val().trim());
    console.log(contract);
    document.getElementById("addressLabel").innerHTML = "Contract Address: " + '<a target="_blank" href = "https://kovan.etherscan.io/address/' + $("#newInfo").val() + '">' + $("#newInfo").val().trim() + "</a>" + '<a data-container="body" data-toggle="tooltip" data-placement="top" title="Copy Shareable Steak View Link" style = "float:right;verical-algin:center"  onclick ="shareableLink()"><svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-link" viewBox="0 0 16 16"><path d="M6.354 5.5H4a3 3 0 0 0 0 6h3a3 3 0 0 0 2.83-4H9c-.086 0-.17.01-.25.031A2 2 0 0 1 7 10.5H4a2 2 0 1 1 0-4h1.535c.218-.376.495-.714.82-1z"/><path d="M9 5.5a3 3 0 0 0-2.83 4h1.098A2 2 0 0 1 9 6.5h3a2 2 0 1 1 0 4h-1.535a4.02 4.02 0 0 1-.82 1H12a3 3 0 1 0 0-6H9z"/></svg></a>';
    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
      });
    contract.methods.dataScientistModelName().call().then(function(info) {
        

        document.getElementById('dataScientistModelNameLabel').innerHTML = "Data Scientist Model Name: " + '<a target="_blank" href = "https://numer.ai/' + String(info) + '">' + String(info) + "</a>";
    });



    contract.methods.costETH().call().then(function(info) {
        

        document.getElementById('costETHLabel').innerHTML = "Contract Cost: " + (new BigNumber(info)).shiftedBy(-18).toString() + " ETH";
        //document.getElementById('costETHLabel').className = document.getElementById('costETHLabel').className +  " text-success";
    });
    contract.methods.dataScientistStakePromise().call().then(function(info) {
        
        
        document.getElementById('dataScientistStakePromiseLabel').innerHTML = "Promised Data Scientist Stake: " + (new BigNumber(info)).shiftedBy(-18).toString() + " NMR";
    });

    contract.methods.dataScientistStakeActual().call().then(function(info) {
        
        if(info != 1)
        {
            document.getElementById('dataScientistStakeActualLabel').innerHTML = "Actual Data Scientist Stake: " + (new BigNumber(info)).shiftedBy(-18).toString() + " NMR";
        }
        else
        {
            document.getElementById('dataScientistStakeActualLabel').innerHTML = "Actual Data Scientist Stake: Not Determined.";
        }
        
    });

    contract.methods.locked().call().then(function(info) {
        

        document.getElementById('lockedLabel').innerHTML = "Locked: " + String(info);
    });

    contract.methods.roundNumber().call().then(function(info) {
        
        if(info != 0)
        {
            document.getElementById('roundNumberLabel').innerHTML = "Round Number: " + String(info);
        }
        else
        {
            document.getElementById('roundNumberLabel').innerHTML = "Round Number: Not Determined";
        }
    });

    contract.methods.birthStamp().call().then(function(info) {
        
        var dateT = new Date(0);
        dateT.setUTCSeconds(info);
        document.getElementById('birthStampLabel').innerHTML = "Birth Date: " + String(dateT.toUTCString().replace("GMT","UTC"));
    });

    contract.methods.startTimestamp().call().then(function(info) {
        
        
        var dateT = new Date(0);
        dateT.setUTCSeconds(info);
        console.log(info == 0);
        startDate = dateT;
        if(info != 0 )
        {
         document.getElementById('startStampLabel').innerHTML = "Start Date: " + String(dateT.toUTCString().replace("GMT","UTC"));
        }
        else
        {
            document.getElementById('startStampLabel').innerHTML = "Start Date: Not Determined";
        }
    });

    contract.methods.buyerModelName().call().then(function(info) {
        
        if(info.length > 0)
        {
            document.getElementById('buyerModelNameLabel').innerHTML = "Buyer Model Name: " + '<a target="_blank" href = "https://numer.ai/' + String(info) + '">' + String(info) + "</a>";
        }
        else
        {
            document.getElementById('buyerModelNameLabel').innerHTML = "Buyer Model Name: Not Determined";
        }
    });

    contract.methods.buyerModelId().call().then(function(info) {
        
        if(info.length > 0)
        {
            document.getElementById('buyerModelIdLabel').innerHTML = "Buyer Model Id: " + String(info);
        }
        else
        {
            document.getElementById('buyerModelIdLabel').innerHTML = "Buyer Model Id: Not Determined";
        }
    });

    contract.methods.metrics(3).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('buyerModelCORRLabel').innerHTML = "Buyer Model Live CORR: " +(new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('buyerModelCORRLabel').innerHTML = "Buyer Model Live CORR: Not Determined";
        }
    });

    contract.methods.metrics(4).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('buyerModelMMCLabel').innerHTML = "Buyer Model Live MMC: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('buyerModelMMCLabel').innerHTML = "Buyer Model Live MMC: Not Determined";
        }
    });

    contract.methods.metrics(5).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('buyerModelFNCLabel').innerHTML = "Buyer Model Live FNC: " +(new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('buyerModelFNCLabel').innerHTML = "Buyer Model Live FNC: Not Determined";
        }
    });

    contract.methods.payoutPending(0).call().then(function(info) {
        

        document.getElementById('buyerModelPendingPayoutLabel').innerHTML = "Buyer Model Live Pending Payout: " + (new BigNumber(info)).shiftedBy(-18).toString();

    });

    contract.methods.metrics(0).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('sellerModelCORRLabel').innerHTML = "Seller Model Live CORR: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('sellerModelCORRLabel').innerHTML = "Seller Model Live CORR: Not Determined";
        }
    });

    contract.methods.metrics(1).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('sellerModelMMCLabel').innerHTML = "Seller Model Live MMC: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('sellerModelMMCLabel').innerHTML = "Seller Model Live MMC: Not Determined";
        }
    });

    contract.methods.metrics(2).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('sellerModelFNCLabel').innerHTML = "Seller Model Live FNC: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('sellerModelFNCLabel').innerHTML = "Seller Model Live FNC: Not Determined";
        }
    });

    contract.methods.payoutPending(1).call().then(function(info) {
        

            document.getElementById('sellerModelPendingPayoutLabel').innerHTML = "Seller Model Live Pending Payout: " + (new BigNumber(info)).shiftedBy(-18).toString();

    });


}

function sendWrapper(method, options) {
    console.log(options);
    txTemp = document.createElement("li");
    //{from: account, value: info }
    method.send(options, function(error, transactionHash) {

        txTemp.className = "list-group-item";
        txTemp.innerHTML = '<a target="_blank" href = "https://kovan.etherscan.io/tx/' + transactionHash + '">' + actionDesc + " " + String(new Date()) + "</a>";

        //alert(transactionHash);

    }).catch(function(e) {
        console.log(e.message);
        if (!(String(e.message) === String("MetaMask Tx Signature: User denied transaction signature."))) {
            document.getElementById("transactionLog").appendChild(txTemp);
        }
        return e;
    }).then(function(e) {
        console.log(e.message);
        if (!(String(e.message) === String("MetaMask Tx Signature: User denied transaction signature."))) {
            document.getElementById("transactionLog").appendChild(txTemp);
        }
    });
}

function gasEstimateCheckModalWrapper(method, runIfAlternate) {
     var caught = false;
    method.estimateGas().catch(function() {
        caught = true;
        $('#gasEstimationFailedModal').modal().on('hidden.bs.modal', function(e) {
            console.log("closed");
            if (!modalDecision) {
                runIfAlternate();

            }
            modalDecision = true;
        });

    }).then(
        
        function() {
          if(caught)
          {
            return;
          }
            runIfAlternate();
        }
    );
}



function registerBuyerName() {
    if (!setUpCheck(false)) {
        return;
    }

    actionDesc = "Register Buyer Name.";
    toTransact = contract.methods.registerBuyerModelName($("#buyerModelNameInput").val().trim());
    gasEstimateCheckModalWrapper(toTransact, function() {
        contract.methods.costETH().call().then(function(info) {
            sendWrapper(toTransact, {
                from: account,
                value: info
            }, actionDesc);



            //document.getElementById('costETHLabel').className = document.getElementById('costETHLabel').className +  " text-success";
        });

    });



}

function reclaim() {
    if (!setUpCheck(false)) {
        return;
    }
    actionDesc = "Reclaim.";
    toTransact = contract.methods.reclaim();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function kick() {
    if (!setUpCheck(false)) {
        return;
    }
    actionDesc = "Kick.";
    toTransact = contract.methods.kick();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function lock() {
    if (!setUpCheck(false)) {
        return;
    }
    actionDesc = "Lock.";
    toTransact = contract.methods.lock();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function claim() {
    if (!setUpCheck(false)) {
        return;
    }
    console.log("contract");
    console.log(contract);
    console.log("account");
    console.log(account);
    actionDesc = "Claim.";
    toTransact = contract.methods.claim();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function deploy() {
    if (!setUpCheck(true)) {
        return;
    }
    txTemp = document.createElement("li");
    var bcr = bc;
    toDeploy = new web3.eth.Contract(abi, {
        from: account,
        data: bcr
    });
    dSMN = $("#dataScientistModelNameInput").val().trim();
    sP = new BigNumber($("#dataScientistStakePromiseInput").val().trim()).shiftedBy(18);
    cE = new BigNumber($("#costETHInput").val().trim()).shiftedBy(18);
    toDeploy.deploy({
        data: bcr,
        arguments: [dSMN, cE, sP]
    }).send({
        from: account
    }).then(

        function(newContractInstance) {

            txTemp = document.createElement("li");
            txTemp.className = "list-group-item";
            txTemp.innerHTML = '<a target="_blank" href = "https://kovan.etherscan.io/address/' + newContractInstance.options.address + '">' + "Deploy." + " " + String(new Date()) + "</a>";
            document.getElementById("transactionLog").appendChild(txTemp);
            $("#newInfo").val(newContractInstance.options.address);
            retreiveContract();
        }
    );
}

function highlightCalendarColumn(selectedCol)
{
    
    var allTd = document.getElementsByTagName("td");

    for(var i = 0;i < allTd.length;i++)
    {

                allTd[i].style = ""; 

    }
    allTd = document.getElementsByTagName("th");
    for(var i = 0;i < allTd.length;i++)
    {

                allTd[i].style = ""; 

    }

    allTd = document.getElementsByTagName("td");

    for(var i = 0;i < allTd.length;i++)
    {
        if(allTd[i].getAttribute("calendarColumn") !== null && allTd[i].getAttribute("calendarColumn").includes(selectedCol))
        {
            allTd[i].style = "border-style:solid;border-width:2px";
            if(allTd[i].getAttribute("calendarColumn").includes("nb"))
            {
                allTd[i].style = "border-style:solid;border-width:2px;border-bottom:none"; 
            }
        }
    }
    allTd = document.getElementsByTagName("th");
    for(var i = 0;i < allTd.length;i++)
    {
        if(allTd[i].getAttribute("calendarColumn") !== null && allTd[i].getAttribute("calendarColumn").includes(selectedCol))
        {
            allTd[i].style = "border-style:solid;border-width:2px";
            if(allTd[i].getAttribute("calendarColumn").includes("nb"))
            {
                allTd[i].style = "border-style:solid;border-width:2px;border-bottom:none"; 
            }
        }
    }
}

function shareableLink()
{
    
    navigator.clipboard.writeText(window.location.href.slice(0,window.location.href.lastIndexOf("/") + 1) + "?" + contractAddress);
}


window.addEventListener('load', () => {
    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
      });
    setup();
    //$("#metaMaskRequiredModal").on("hidden.bs.modal",setup);

    console.log("ABC",window.location.href.slice(window.location.href.indexOf("?")+1).length);
    if(window.location.href.slice(window.location.href.indexOf("?")+1).length > 0 && window.location.href.toString().includes("?"))
    {
        console.log("ABC",window.location.href.slice(window.location.href.indexOf("?")+1));
        document.getElementById("newInfo").value = (window.location.href.slice(window.location.href.indexOf("?")+1));
        retreiveContract();
    }

    var calendarInterval = setInterval(
    function()
    {
        var d = new Date();



        var n = d.toUTCString();
        console.log(n);
        document.getElementById("UTCclock").innerHTML = n.replace("GMT","UTC");
        if(startDate !== undefined && startDate.getTime() !== 0)
        {
            console.log("have startdate",startDate);
            console.log(startDate.getTime(),d.getTime());
            
            var elapsed = (d.getTime() - startDate.getTime())/3600000;

            //highlightCalendarColumn("" + (d.getDay() + 1))
            console.log("UTC DEB HOURS",typeof d.getUTCHours());
            if(elapsed > 198)
            {
                highlightCalendarColumn("9");
            }
            else
            {
                switch(d.getUTCDay())
            {
                case 0:
                    if(elapsed > 48)
                    {
                        highlightCalendarColumn("8");
                    }
                    else
                    {
                        highlightCalendarColumn("1");
                    }
                    break;

                case 1:
                    console.log("UTC HOURS",d.getUTCHours());
                     if(d.getUTCHours() <=13)
                    {
                        highlightCalendarColumn("2");
                    }
                    break;

                case 2:
                    highlightCalendarColumn("3");
                    break;

                case 3:
                    highlightCalendarColumn("4");
                    break;
                
                case 4:
                    highlightCalendarColumn("5");
                    break;

                case 5:
                    highlightCalendarColumn("6");
                    break;
                
                case 6:
                    if(elapsed > 48)
                    {
                        highlightCalendarColumn("7");
                    }
                    else
                    {
                        if(d.getUTCHours >= 18)
                        {
                            highlightCalendarColumn("0");
                        }
                    }
                    break;
                


            }
            }
            


        }
    },500);


});
