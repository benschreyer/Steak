var contract;
var account = null;
var web3;


var actionDesc;
//true for modal main
var modalDecision = true;

var startDate;



var contractAddress = "";
const bc = '0x60806040526001600455600680546001600160a01b03191673a9187c8c9f692fe2ca6b80069e87df23b34157a31790553480156200003c57600080fd5b5060405162004c2838038062004c28833981810160405260608110156200006257600080fd5b81019080805160405193929190846401000000008211156200008357600080fd5b9083019060208201858111156200009957600080fd5b8251640100000000811182820188101715620000b457600080fd5b82525081516020918201929091019080838360005b83811015620000e3578181015183820152602001620000c9565b50505050905090810190601f168015620001115780820380516001836020036101000a031916815260200191505b506040908152602082015191015142602f559092509050662386f26fc10000811015620001705760405162461bcd60e51b815260040180806020018281038252604481526020018062004be46044913960600191505060405180910390fd5b60408051808201909152600080825260208201526200019490601b9060026200051d565b506000601d556001600f55602e805461ffff19169055600d8290558251620001c490600790602086019062000565565b50600e819055602280546001600160a01b03191633179055620001e662000473565b6024805473aa1dc356dc4b18f30c347798fd5379f3d77abc5b6001600160a01b031991821681179092557f623732383564343835396461346232383963373836316462393731626166306160255567016345785d8a00006026819055602780548316841790557f35306437626361346463663734363261383365373238326236323634363436366028556029819055602a805490921690921790557f6337646437326361313462343466306339623663666364346237656330613263602b55602c5567120a871cc0020000602d5560408051808201909152600280825260016020830152620002d8916010916200051d565b5060006012556040805160c08101825260001980825260208201819052918101919091526001606082018190526080820181905260a082015262000321906014906006620005d8565b506000601a556040805160a081018252600b606082019081526a31b7b93932b630ba34b7b760a91b60808301528152815180830183526003808252626d6d6360e81b602083810191909152808401929092528351808501855281815262666e6360e81b92810192909252928201526200039e91601e91906200060e565b50600d54600e546040805160208101849052908101829052606080825260078054600260001961010060018416150201909116049183018290527f55e6d2419970dfeebb3bbe50864cfc7aad527644cb56e79760995944114d1f8b9490939092909181906080820190869080156200045a5780601f106200042e576101008083540402835291602001916200045a565b820191906000526020600020905b8154815290600101906020018083116200043c57829003601f168201915b505094505050505060405180910390a1505050620006e4565b620004f973c89bd4e1632d3a43cb03aaad5262cbe4038bc5716001600160a01b03166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b158015620004c557600080fd5b505afa158015620004da573d6000803e3d6000fd5b505050506040513d6020811015620004f157600080fd5b5051620004fb565b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b826002810192821562000553579160200282015b8281111562000553578251829060ff1690559160200191906001019062000531565b506200056192915062000661565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005a857805160ff191683800117855562000553565b8280016001018555821562000553579182015b8281111562000553578251825591602001919060010190620005bb565b826006810192821562000553579160200282015b8281111562000553578251829060000b905591602001919060010190620005ec565b826003810192821562000653579160200282015b828111156200065357825180516200064291849160209091019062000565565b509160200191906001019062000622565b506200056192915062000678565b5b8082111562000561576000815560010162000662565b80821115620005615760006200068f828262000699565b5060010162000678565b50805460018160011615610100020316600290046000825580601f10620006c15750620006e1565b601f016020900490600052602060002090810190620006e1919062000661565b50565b6144f080620006f46000396000f3fe60806040526004361061024f5760003560e01c80638e9efbaa11610138578063c6404d52116100b0578063d9c039d51161007f578063e6fd48bc11610064578063e6fd48bc1461079d578063f83d08ba146107b2578063fa93f883146107c75761024f565b8063d9c039d51461075e578063e274cfd4146107735761024f565b8063c6404d52146106ef578063cd45c9581461071f578063cf30901214610734578063cf7d2489146107495761024f565b8063a5f1789a11610107578063b5f66c10116100ec578063b5f66c1014610604578063ba67b51314610634578063bbb82d89146106da5761024f565b8063a5f1789a146105bf578063ac01495e146105ef5761024f565b80638e9efbaa1461053b57806391db3da51461056557806396da66f21461057a578063a02ae5cc146105aa5761024f565b80635c3c7150116101cb5780637a67b4791161019a5780638127f5dd1161017f5780638127f5dd146104e75780638aa001fc146104fc5780638da5cb5b146105265761024f565b80637a67b479146104bd57806380e9071b146104d25761024f565b80635c3c7150146104235780636682f449146104385780636d9aac62146104625780637150d8ae1461048c5761024f565b80634e2786fb11610222578063558eaa3011610207578063558eaa30146103ac57806355954931146103c15780635a42b392146103f35761024f565b80634e2786fb1461036e5780634e71d92d146103835761024f565b80631df4ccfc146102545780633e239e1a1461027b5780634ac1ad78146102a55780634dff2c06146102cf575b600080fd5b34801561026057600080fd5b506102696107f1565b60408051918252519081900360200190f35b34801561028757600080fd5b506102696004803603602081101561029e57600080fd5b50356107f7565b3480156102b157600080fd5b50610269600480360360208110156102c857600080fd5b5035610812565b3480156102db57600080fd5b506102f9600480360360208110156102f257600080fd5b5035610824565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561033357818101518382015260200161031b565b50505050905090810190601f1680156103605780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561037a57600080fd5b506102696108bf565b34801561038f57600080fd5b506103986108c5565b604080519115158252519081900360200190f35b3480156103b857600080fd5b506102f9610a3a565b3480156103cd57600080fd5b506103f1600480360360408110156103e457600080fd5b5080359060200135610a95565b005b3480156103ff57600080fd5b506103f16004803603604081101561041657600080fd5b5080359060200135610b91565b34801561042f57600080fd5b506102f9611076565b34801561044457600080fd5b506102696004803603602081101561045b57600080fd5b50356110d1565b34801561046e57600080fd5b506102696004803603602081101561048557600080fd5b50356110e5565b34801561049857600080fd5b506104a16110f2565b604080516001600160a01b039092168252519081900360200190f35b3480156104c957600080fd5b50610398611101565b3480156104de57600080fd5b50610398611413565b3480156104f357600080fd5b50610269611667565b34801561050857600080fd5b506102696004803603602081101561051f57600080fd5b503561166d565b34801561053257600080fd5b506104a1611677565b34801561054757600080fd5b506102f96004803603602081101561055e57600080fd5b5035611686565b34801561057157600080fd5b50610269611693565b34801561058657600080fd5b506103f16004803603604081101561059d57600080fd5b5080359060200135611699565b3480156105b657600080fd5b5061026961180c565b3480156105cb57600080fd5b506103f1600480360360408110156105e257600080fd5b5080359060200135611812565b3480156105fb57600080fd5b506102f96119f9565b34801561061057600080fd5b506103f16004803603604081101561062757600080fd5b5080359060200135611a54565b6103f16004803603602081101561064a57600080fd5b81019060208101813564010000000081111561066557600080fd5b82018360208201111561067757600080fd5b8035906020019184600183028401116401000000008311171561069957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611b06945050505050565b3480156106e657600080fd5b50610398611fd1565b3480156106fb57600080fd5b506103f16004803603604081101561071257600080fd5b5080359060200135611fdf565b34801561072b57600080fd5b506102696120b3565b34801561074057600080fd5b506103986120b9565b34801561075557600080fd5b506102f96120c2565b34801561076a57600080fd5b5061026961211d565b34801561077f57600080fd5b506102696004803603602081101561079657600080fd5b5035612123565b3480156107a957600080fd5b50610269612130565b3480156107be57600080fd5b50610398612136565b3480156107d357600080fd5b50610269600480360360208110156107ea57600080fd5b50356124b8565b602d5481565b60006018603c8084045b048161080957fe5b0690505b919050565b60006007600462015180840401610809565b601e816003811061083157fe5b018054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815293508301828280156108b75780601f1061088c576101008083540402835291602001916108b7565b820191906000526020600020905b81548152906001019060200180831161089a57829003601f168201915b505050505081565b60135481565b60225460009042906001600160a01b031633146109135760405162461bcd60e51b815260040180806020018281038252602b815260200180614413602b913960400191505060405180910390fd5b602e5460ff166109545760405162461bcd60e51b81526004018080602001828103825260228152602001806142816022913960400191505060405180910390fd5b61095d81610812565b60051480610973575061096f81610812565b6006145b80610984575061098281610812565b155b6109bf5760405162461bcd60e51b8152600401808060200182810382526055815260200180613d9d6055913960600191505060405180910390fd5b6205460060215482031180156109db5750620ae0606021548203105b610a165760405162461bcd60e51b81526004018080602001828103825260c5815260200180613df260c5913960e00191505060405180910390fd5b60006012819055601a55610a286124c3565b505060006012819055601a5550600190565b600b805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108b75780601f1061088c576101008083540402835291602001916108b7565b60008281526005602052604090205482906001600160a01b03163314610aec5760405162461bcd60e51b81526004018080602001828103825260288152602001806143eb6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a2601382905560105482148015610b485750601154601054145b610b835760405162461bcd60e51b815260040180806020018281038252603a8152602001806143b1603a913960400191505060405180910390fd5b610b8b612669565b50505050565b60008281526005602052604090205482906001600160a01b03163314610be85760405162461bcd60e51b81526004018080602001828103825260288152602001806143eb6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a2816014601a5460068110610c3b57fe5b0155601a80546001019081905560061415611069576000601a819055601255601754601454148015610c705750601854601554145b8015610c7f5750601954601654145b8015610c8e5750601054601354145b8015610c9d5750601154601054145b8015610cad5750600e54600f5410155b8015610cba5750601b5415155b8015610cc75750601c5415155b15610ebf57602e805461ff0019166101001790556000610ce5612962565b602254604080516370a0823160e01b815230600482015290519293506001600160a01b038085169363a9059cbb939091169184916370a0823191602480820192602092909190829003018186803b158015610d3f57600080fd5b505afa158015610d53573d6000803e3d6000fd5b505050506040513d6020811015610d6957600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610dba57600080fd5b505af1158015610dce573d6000803e3d6000fd5b505050506040513d6020811015610de457600080fd5b5050601454601554601654601754601854601954601354601054601154600f54604080519a8b5260208b0199909952898901979097526060890195909552608088019390935260a087019190915260c086015260e0850152610100840152610120830152517f9d4653ab607316222770c3fb15f31aa901fe45c8e2fc4c4d7893cd433424d9b4918190036101400190a16006546040516001600160a01b03909116906064470480156108fc02916000818181858888f19350505050158015610eb0573d6000803e3d6000fd5b506022546001600160a01b0316ff5b602e805461ff00191690556000610ed4612962565b602254604080516370a0823160e01b815230600482015290519293506001600160a01b038085169363a9059cbb939091169184916370a0823191602480820192602092909190829003018186803b158015610f2e57600080fd5b505afa158015610f42573d6000803e3d6000fd5b505050506040513d6020811015610f5857600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610fa957600080fd5b505af1158015610fbd573d6000803e3d6000fd5b505050506040513d6020811015610fd357600080fd5b5050601454601554601654601754601854601954601354601054601154600f54604080519a8b5260208b0199909952898901979097526060890195909552608088019390935260a087019190915260c086015260e0850152610100840152610120830152517f9d4653ab607316222770c3fb15f31aa901fe45c8e2fc4c4d7893cd433424d9b4918190036101400190a150611071565b610b8b612971565b505050565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108b75780601f1061088c576101008083540402835291602001916108b7565b601081600281106110de57fe5b0154905081565b601481600681106110de57fe5b6023546001600160a01b031681565b60225460009042906001600160a01b0316331461114f5760405162461bcd60e51b81526004018080602001828103825260228152602001806140516022913960400191505060405180910390fd5b602e5460ff16156111a7576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74206b69636b206c6f636b656420636f6e74726163742e00000000604482015290519081900360640190fd5b6023546001600160a01b0316611204576040805162461bcd60e51b815260206004820152601160248201527f4e6f20627579657220746f206b69636b2e000000000000000000000000000000604482015290519081900360640190fd5b62026ac06021548203106112495760405162461bcd60e51b815260040180806020018281038252604c8152602001806142a3604c913960600191505060405180910390fd5b61125281610812565b1580611279575061126281610812565b60011480156112795750600e611277826107f7565b105b6112b45760405162461bcd60e51b8152600401808060200182810382526052815260200180613ed86052913960600191505060405180910390fd5b6023546040516001600160a01b03909116904780156108fc02916000818181858888f193505050501580156112ed573d6000803e3d6000fd5b50471561132b5760405162461bcd60e51b815260040180806020018281038252602b815260200180614073602b913960400191505060405180910390fd5b60408051602080825260088054600260001961010060018416150201909116049183018290527fa9cc95a8903112deb977e7d46d0301afe843f1f9516bcf7b6eac3e69fdf80ea2939092918291820190849080156113ca5780601f1061139f576101008083540402835291602001916113ca565b820191906000526020600020905b8154815290600101906020018083116113ad57829003601f168201915b50509250505060405180910390a1602380546001600160a01b031916905560408051602081019182905260009081905261140691600891613b8c565b5050600060215550600190565b600080429050620546006021548203118015611449575061143381610812565b60011480611449575061144581610812565b6002145b8061145a5750620ae0606021548203115b6114955760405162461bcd60e51b81526004018080602001828103825260448152602001806144776044913960600191505060405180910390fd5b6023546001600160a01b031633146114de5760405162461bcd60e51b815260040180806020018281038252602d81526020018061416c602d913960400191505060405180910390fd5b602e54610100900460ff16156115255760405162461bcd60e51b8152600401808060200182810382526021815260200180613eb76021913960400191505060405180910390fd5b600061152f612962565b602254604080516370a0823160e01b815230600482015290519293506001600160a01b038085169363a9059cbb939091169184916370a0823191602480820192602092909190829003018186803b15801561158957600080fd5b505afa15801561159d573d6000803e3d6000fd5b505050506040513d60208110156115b357600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561160457600080fd5b505af1158015611618573d6000803e3d6000fd5b505050506040513d602081101561162e57600080fd5b50506040517fcc4d233c9fd6c1fe42909b8af6a1755052683997a05f2f1c65ab303d051a43a290600090a16023546001600160a01b0316ff5b600e5481565b6000603c82610809565b6022546001600160a01b031681565b6009816002811061083157fe5b600d5481565b60008281526005602052604090205482906001600160a01b031633146116f05760405162461bcd60e51b81526004018080602001828103825260288152602001806143eb6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a28160106012546002811061174357fe5b01556012805460019081019182905514156117ff576117f960096012546002811061176a57fe5b01805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156117ef5780601f106117c4576101008083540402835291602001916117ef565b820191906000526020600020905b8154815290600101906020018083116117d257829003601f168201915b5050505050612dee565b50611071565b6000601255610b8b612f5c565b600f5481565b60008281526005602052604090205482906001600160a01b031633146118695760405162461bcd60e51b81526004018080602001828103825260288152602001806143eb6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a26118b58261304c565b80516118c991600c91602090910190613b8c565b506040805181815260088054600260001961010060018416150201909116049282018390527f54b74939675f041c6d358c3416a2f8691a003cd01954139d8487ea89cbf54278929091600c91819060208201906060830190869080156119705780601f1061194557610100808354040283529160200191611970565b820191906000526020600020905b81548152906001019060200180831161195357829003601f168201915b50508381038252845460026000196101006001841615020190911604808252602090910190859080156119e45780601f106119b9576101008083540402835291602001916119e4565b820191906000526020600020905b8154815290600101906020018083116119c757829003601f168201915b505094505050505060405180910390a1505050565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108b75780601f1061088c576101008083540402835291602001916108b7565b60008281526005602052604090205482906001600160a01b03163314611aab5760405162461bcd60e51b81526004018080602001828103825260288152602001806143eb6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a2600f82905560006012819055610b8b9060099061176a565b60225442906001600160a01b0316331415611b525760405162461bcd60e51b815260040180806020018281038252603081526020018061409e6030913960400191505060405180910390fd5b6023546001600160a01b031615611bb0576040805162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c7265616479206861732062757965722e0000000000604482015290519081900360640190fd5b600d54341015611bf15760405162461bcd60e51b8152600401808060200182810382526028815260200180613f9c6028913960400191505060405180910390fd5b611bfa81610812565b6006148015611c1157506011611c0f826107f7565b115b80611c225750611c2081610812565b155b611c5d5760405162461bcd60e51b81526004018080602001828103825260558152602001806143106055913960600191505060405180910390fd5b602e5460ff1615611c9f5760405162461bcd60e51b815260040180806020018281038252603281526020018061410f6032913960400191505060405180910390fd5b602380546001600160a01b0319163317905581518290611cf05760405162461bcd60e51b8152600401808060200182810382526028815260200180613d756028913960400191505060405180910390fd5b60088054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015611d7c5780601f10611d5157610100808354040283529160200191611d7c565b820191906000526020600020905b815481529060010190602001808311611d5f57829003601f168201915b505050505090508051600014611dc35760405162461bcd60e51b815260040180806020018281038252602b815260200180614141602b913960400191505060405180910390fd5b8351611dd6906008906020870190613b8c565b506021839055604080516008805460606020601f600260001961010060018716150201909416939093049283018190040284018101855293830181815292938493929190840182828015611e6b5780601f10611e4057610100808354040283529160200191611e6b565b820191906000526020600020905b815481529060010190602001808311611e4e57829003601f168201915b50505091835250506007805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611efd5780601f10611ed257610100808354040283529160200191611efd565b820191906000526020600020905b815481529060010190602001808311611ee057829003601f168201915b5050509190925250611f1491600991506002613c0a565b5060408051346020820181905282825260088054600260001961010060018416150201909116049383018490527f608e57d52d59229eb27eb28e93e418ea49ade1e3d536dc1bb0331eba63109784939092908190606082019085908015611fbc5780601f10611f9157610100808354040283529160200191611fbc565b820191906000526020600020905b815481529060010190602001808311611f9f57829003601f168201915b5050935050505060405180910390a150505050565b602e54610100900460ff1681565b60008281526005602052604090205482906001600160a01b031633146120365760405162461bcd60e51b81526004018080602001828103825260288152602001806143eb6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a281601b601d546002811061208957fe5b0155601d546001116120a2576000601d556117f9612971565b601d80546001019055610b8b612669565b602f5481565b602e5460ff1681565b600c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108b75780601f1061088c576101008083540402835291602001916108b7565b60125481565b601b81600281106110de57fe5b60215481565b60225460009042906001600160a01b0316331461219a576040805162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206f776e65722063616e206c6f636b20636f6e74726163742e000000604482015290519081900360640190fd5b602e5460ff16156121dc5760405162461bcd60e51b815260040180806020018281038252602c815260200180613fe7602c913960400191505060405180910390fd5b6023546001600160a01b0316612239576040805162461bcd60e51b815260206004820152601160248201527f4e6f20627579657220746f206c6f636b2e000000000000000000000000000000604482015290519081900360640190fd5b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156122c55780601f1061229a576101008083540402835291602001916122c5565b820191906000526020600020905b8154815290600101906020018083116122a857829003601f168201915b50505050509050805160001415612323576040805162461bcd60e51b815260206004820152601a60248201527f4e6f2062757965724d6f64656c4e616d6520746f206c6f636b2e000000000000604482015290519081900360640190fd5b62026ac06021548303106123685760405162461bcd60e51b81526004018080602001828103825260418152602001806140ce6041913960600191505060405180910390fd5b61237182610812565b1580612398575061238182610812565b60011480156123985750600e612396836107f7565b105b6123d35760405162461bcd60e51b815260040180806020018281038252604c815260200180614365604c913960600191505060405180910390fd5b60006123dd612962565b9050602d54816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561242f57600080fd5b505afa158015612443573d6000803e3d6000fd5b505050506040513d602081101561245957600080fd5b505110156124985760405162461bcd60e51b815260040180806020018281038252605b8152602001806141df605b913960600191505060405180910390fd5b602e805460ff191660011790556124ad61319a565b506001935050505090565b6000603c8083610801565b60006124cd613c56565b602b546124e29030630b5f66c160e41b61330a565b90506125b26040518060400160405280600381526020016219d95d60ea1b8152506007604051602001808061423a604791396047018280546001816001161561010002031660029004801561256e5780601f1061254c57610100808354040283529182019161256e565b820191906000526020600020905b81548152906001019060200180831161255a575b50507f22297b746f74616c5374616b657d7d0000000000000000000000000000000000815260408051601019818403018152600f909201905285939250905061332f565b612618604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060400160405280601d81526020017f646174612e76325573657250726f66696c652e746f74616c5374616b650000008152508361332f9092919063ffffffff16565b60408051808201909152600581526474696d657360d81b6020820152612648908290670de0b6b3a764000061334d565b602a54602c54612663916001600160a01b031690839061336b565b91505090565b6000612673613c56565b602854612688903063632026a960e11b61330a565b90506060601d5460001415612729576008805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561271d5780601f106126f25761010080835404028352916020019161271d565b820191906000526020600020905b81548152906001019060200180831161270057829003601f168201915b505050505090506127b7565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156127af5780601f10612784576101008083540402835291602001916127af565b820191906000526020600020905b81548152906001019060200180831161279257829003601f168201915b505050505090505b60135460408051808201909152600381526219d95d60ea1b60208201526128ce906127e183613539565b846040516020018080613d1f6056913960560183805190602001908083835b6020831061281f5780518252601f199092019160209182019101612800565b51815160209384036101000a60001901801990921691161790526a163ab9b2b93730b6b29d1160a91b919093019081528451600b90910192850191508083835b6020831061287e5780518252601f19909201916020918201910161285f565b6001836020036101000a03801982511681845116808217855250505050505090500180613f2a602a9139602a01925050506040516020818303038152906040528561332f9092919063ffffffff16565b61290f604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060800160405280604681526020016141996046913985919061332f565b60408051808201909152600581526474696d657360d81b602082015261293f908490670de0b6b3a764000061334d565b60275460295461295a916001600160a01b031690859061336b565b935050505090565b6002546001600160a01b031690565b600061297b613c56565b6028546129909030632d2159c960e11b61330a565b90506000601354905060606002601a541115612a38576008805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612a2c5780601f10612a0157610100808354040283529160200191612a2c565b820191906000526020600020905b815481529060010190602001808311612a0f57829003601f168201915b50505050509050612ac6565b6007805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612abe5780601f10612a9357610100808354040283529160200191612abe565b820191906000526020600020905b815481529060010190602001808311612aa157829003601f168201915b505050505090505b6060601e6003601a5481612ad657fe5b0660038110612ae157fe5b01805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612b665780601f10612b3b57610100808354040283529160200191612b66565b820191906000526020600020905b815481529060010190602001808311612b4957829003601f168201915b50505050509050612cf86040518060400160405280600381526020016219d95d60ea1b815250612b9585613539565b84846040516020018080613d1f6056913960560184805190602001908083835b60208310612bd45780518252601f199092019160209182019101612bb5565b51815160209384036101000a60001901801990921691161790526a163ab9b2b93730b6b29d1160a91b919093019081528551600b90910192860191508083835b60208310612c335780518252601f199092019160209182019101612c14565b51815160209384036101000a60001901801990921691161790527f22297b726f756e644461696c79506572666f726d616e6365737b000000000000919093019081528451601a90910192850191508083835b60208310612ca45780518252601f199092019160209182019101612c85565b6001836020036101000a03801982511681845116808217855250505050505090500180627d7d7d60e81b81525060030193505050506040516020818303038152906040528661332f9092919063ffffffff16565b612d9a604051806040016040528060048152602001630e0c2e8d60e31b81525082604051602001808061443e6039913960390182805190602001908083835b60208310612d565780518252601f199092019160209182019101612d37565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528661332f9092919063ffffffff16565b60408051808201909152600581526474696d657360d81b6020820152612dca908590670de0b6b3a764000061334d565b602754602954612de5916001600160a01b031690869061336b565b94505050505090565b6000612df8613c56565b602b54612e0d9030634b6d337960e11b61330a565b9050612ed06040518060400160405280600381526020016219d95d60ea1b815250846040516020018080613f546048913960480182805190602001908083835b60208310612e6c5780518252601f199092019160209182019101612e4d565b5181516020939093036101000a60001901801990911692169190911790527f222c746f75726e616d656e743a38297b726f756e644e756d6265727d7d00000092019182525060408051808303600219018152601d909201905285939250905061332f565b612f11604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060600160405280602181526020016142ef6021913983919061332f565b60408051808201909152600581526474696d657360d81b6020820152612f3a908290600161334d565b602a54602c54612f55916001600160a01b031690839061336b565b9392505050565b6000612f66613c56565b602b54612f7b9030635595493160e01b61330a565b9050612fbd6040518060400160405280600381526020016219d95d60ea1b8152506040518060600160405280603e8152602001614013603e913983919061332f565b613023604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060400160405280601481526020017f646174612e726f756e64732e302e6e756d6265720000000000000000000000008152508361332f9092919063ffffffff16565b60408051808201909152600581526474696d657360d81b6020820152612648908290600161334d565b606060005b60208160ff161080156130975750828160ff166020811061306e57fe5b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b156130a457600101613051565b60608160ff1667ffffffffffffffff811180156130c057600080fd5b506040519080825280601f01601f1916602001820160405280156130eb576020820181803683370190505b509050600091505b60208260ff161080156131395750838260ff166020811061311057fe5b1a60f81b7fff000000000000000000000000000000000000000000000000000000000000001615155b15612f5557838260ff166020811061314d57fe5b1a60f81b818360ff168151811061316057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001909101906130f3565b60006131a4613c56565b6025546131b990306352f8bc4d60e11b61330a565b90506132896040518060400160405280600381526020016219d95d60ea1b8152506008604051602001808061423a60479139604701828054600181600116156101000203166002900480156132455780601f10613223576101008083540402835291820191613245565b820191906000526020600020905b815481529060010190602001808311613231575b50507f22297b69647d7d000000000000000000000000000000000000000000000000008152604080516018198184030181526007909201905285939250905061332f565b6132ef604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060400160405280601581526020017f646174612e76325573657250726f66696c652e696400000000000000000000008152508361332f9092919063ffffffff16565b602454602654612663916001600160a01b031690839061336b565b613312613c56565b61331a613c56565b6133268186868661362c565b95945050505050565b608083015161333e9083613669565b60808301516110719082613669565b608083015161335c9083613669565b60808301516110719082613680565b6004546040805130606090811b60208084019190915260348084018690528451808503909101815260549093018452825192810192909220908601939093526000838152600590915281812080546001600160a01b0319166001600160a01b038816179055905182917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af991a26002546001600160a01b0316634000aea08584613413876136df565b6040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561347457818101518382015260200161345c565b50505050905090810190601f1680156134a15780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b1580156134c257600080fd5b505af11580156134d6573d6000803e3d6000fd5b505050506040513d60208110156134ec57600080fd5b50516135295760405162461bcd60e51b8152600401808060200182810382526023815260200180613fc46023913960400191505060405180910390fd5b6004805460010190559392505050565b606081806135605750506040805180820190915260018152600360fc1b602082015261080d565b8060005b811561357857600101600a82049150613564565b60608167ffffffffffffffff8111801561359157600080fd5b506040519080825280601f01601f1916602001820160405280156135bc576020820181803683370190505b50905060001982015b841561362257600a850660300160f81b828280600190039350815181106135e857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a850494506135c5565b5095945050505050565b613634613c56565b613644856080015161010061382d565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b613676826003835161386d565b611071828261393b565b67ffffffffffffffff198112156136a05761369b8282613955565b6136db565b67ffffffffffffffff8113156136ba5761369b828261398e565b600081126136ce5761369b8260008361386d565b6136db826001831961386d565b5050565b6060634042994660e01b6000808460000151856020015186604001518760600151600189608001516000015160405160240180896001600160a01b03168152602001888152602001878152602001866001600160a01b03168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156137a657818101518382015260200161378e565b50505050905090810190601f1680156137d35780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b0319909d169c909c17909b5250989950505050505050505050919050565b613835613c8b565b602082061561384a5760208206602003820191505b506020808301829052604080518085526000815283019091019052815b92915050565b60178111613888576117f98360e0600585901b1683176139c3565b60ff81116138b2576138a5836018611fe0600586901b16176139c3565b506117f9838260016139db565b61ffff81116138dd576138d0836019611fe0600586901b16176139c3565b506117f9838260026139db565b63ffffffff811161390a576138fd83601a611fe0600586901b16176139c3565b506117f9838260046139db565b67ffffffffffffffff81116110715761392e83601b611fe0600586901b16176139c3565b50610b8b838260086139db565b613943613c8b565b612f55838460000151518485516139fc565b6139608260c36139c3565b506136db82826000190360405160200180828152602001915050604051602081830303815290604052613aa8565b6139998260c26139c3565b506136db828260405160200180828152602001915050604051602081830303815290604052613aa8565b6139cb613c8b565b612f558384600001515184613ab5565b6139e3613c8b565b6139f4848560000151518585613b00565b949350505050565b613a04613c8b565b8251821115613a1257600080fd5b84602001518285011115613a3c57613a3c85613a348760200151878601613b5e565b600202613b75565b600080865180518760208301019350808887011115613a5b5787860182525b505050602084015b60208410613a825780518252601f199093019260209182019101613a63565b51815160001960208690036101000a019081169019919091161790525083949350505050565b613676826002835161386d565b613abd613c8b565b83602001518310613ad957613ad9848560200151600202613b75565b835180516020858301018481535080851415613af6576001810182525b5093949350505050565b613b08613c8b565b84602001518483011115613b2557613b2585858401600202613b75565b60006001836101000a039050855183868201018583198251161781525080518487011115613b535783860181525b509495945050505050565b600081831115613b6f575081613867565b50919050565b8151613b81838361382d565b50610b8b838261393b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613bcd57805160ff1916838001178555613bfa565b82800160010185558215613bfa579182015b82811115613bfa578251825591602001919060010190613bdf565b50613c06929150613ca5565b5090565b8260028101928215613c4a579160200282015b82811115613c4a5782518051613c3a918491602090910190613b8c565b5091602001919060010190613c1d565b50613c06929150613cba565b6040805160a081018252600080825260208201819052918101829052606081019190915260808101613c86613c8b565b905290565b604051806040016040528060608152602001600081525090565b5b80821115613c065760008155600101613ca6565b80821115613c06576000613cce8282613cd7565b50600101613cba565b50805460018160011615610100020316600290046000825580601f10613cfd5750613d1b565b601f016020900490600052602060002090810190613d1b9190613ca5565b5056fe68747470733a2f2f6170692d746f75726e616d656e742e6e756d65722e61692f6772617068716c3f71756572793d7b726f756e645375626d697373696f6e506572666f726d616e636528726f756e644e756d6265723a4d6f64656c206e616d65206d757374206e6f7420626520656d70792f4e554c4c20737472696e672e436f6e7472616374207265776172642063616e206f6e6c792062652076616c69646174656420616e6420636c61696d6564206f6e204672696461792c2053617475726461792c206f722053756e646179205554432e4d75737420636c61696d20636f6e7472616374206265666f7265204d6f6e64617920555443206f6620746865207765656b20666f6c6c6f77696e672074686520636f6e7472616374206265696e6720656e67616765642062792074686520627579657220616e6420616674657220546875727364617920555443206f6620746865207765656b2074686520636f6e74726163742077617320656e6761676564206279207468652062757965722e2043616e6e6f7420636c61696d206f74686572776973652e43616e6e6f74207265636c61696d20766572696669656420636f6e74726163742e436f6e74726163742062757965722063616e206f6e6c79206265206b69636b656420696e206265747765656e2053756e6461792030303a30302055544320616e64204d6f6e6461792031343a30302055544322297b726f756e644461696c79506572666f726d616e6365737b7061796f757450656e64696e677d7d7d68747470733a2f2f6170692d746f75726e616d656e742e6e756d65722e61692f6772617068716c3f71756572793d7b757365724163746976697469657328757365726e616d653a22496e73756666696369656e74204554482073656e7420746f20656e74657220636f6e74726163742e756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c6543616e6e6f74206c6f636b20636f6e7472616374207468617420697320616c7265616479206c6f636b65642e68747470733a2f2f6170692d746f75726e616d656e742e6e756d65722e61692f6772617068716c3f71756572793d7b726f756e64737b6e756d6265727d7d4f6e6c79206f776e65722063616e206b69636b2066726f6d20636f6e74726163742e4661696c656420746f2072657475726e2045544820746f2062757965722e2043616e6e6f74206b69636b2e4461746120736369656e746973742063616e206e6f7420656e746572207468656972206f776e20636f6e74726163742e43616e6e6f74206c6f636b20636f6e747261637420746861742077617320656e7465726564206279206275796572206f76657220343420686f7572732061676f2e43616e6e6f742072656769737465722062757965724d6f64656c4e616d65206f6e206c6f636b656420636f6e74726163742e4d6f64656c206d757374206e6f7420616c726561647920686176652062757965724d6f64656c4e616d652e4f6e6c79207468652062757965722063616e20747269676765722061207061796d656e74207265636c61696d2e646174612e726f756e645375626d697373696f6e506572666f726d616e63652e726f756e644461696c79506572666f726d616e6365732e302e7061796f757450656e64696e67436f6e747261637420726571756972657320302e31204c494e4b20746f74616c20746f206f706572617465206f6e6365206c6f636b65642c2063757272656e74204c494e4b2062616c616e636520697320756e64657220302e312e68747470733a2f2f6170692d746f75726e616d656e742e6e756d65722e61692f6772617068716c3f71756572793d7b76325573657250726f66696c6528757365726e616d653a2243616e6e6f7420636c61696d20616e20756e6c6f636b656420636f6e74726163742e43616e6e6f74206b69636b2062757965722066726f6d20636f6e747261637420746861742077617320656e7465726564206279206275796572206f76657220343420686f7572732061676f2e646174612e75736572416374697669746965732e302e726f756e644e756d626572436f6e74726163742063616e206f6e6c7920626520656e7465726564206279206275796572206265747765656e2053617475726461792031383a30302055544320616e642053756e6461792032343a303020555443436f6e74726163742063616e206f6e6c79206265206c6f636b656420696e206265747765656e2053756e6461792030303a30302055544320616e64204d6f6e6461792031343a303020555443416c6c207375626d697373696f6e73206f6e206d6f64656c73206d7573742062652063757272656e7420726f756e6420616e6420657175616c2e536f75726365206d75737420626520746865206f7261636c65206f662074686520726571756573744f6e6c7920746865206f776e65722063616e20747269676765722061207061796d656e7420636c61696d2e646174612e726f756e645375626d697373696f6e506572666f726d616e63652e726f756e644461696c79506572666f726d616e6365732e302e43616e6e6f7420636c61696d20636f6e7472616374206265666f7265204d6f6e646179206f6620746865207765656b20666f6c6c6f77696e672074686520726f756e642ea2646970667358221220746b373cda810b36d889a9d7d797279276d1d9cd3a73848188b0c5cafe8af2a964736f6c634300060c00334461746120736369656e74697374206d757374207374616b652061746c6561737420302e3031204e4d5220666f7220766572696669636174696f6e20707572706f736573';
const abi = JSON.parse('[  {   "inputs": [    {     "internalType": "string",     "name": "_dataScientistModelName",     "type": "string"    },    {     "internalType": "uint256",     "name": "_costETH",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_dataScientistStakePromise",     "type": "uint256"    }   ],   "stateMutability": "nonpayable",   "type": "constructor"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "BuyerModelNameRegistered",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "bytes32",     "name": "id",     "type": "bytes32"    }   ],   "name": "ChainlinkCancelled",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "bytes32",     "name": "id",     "type": "bytes32"    }   ],   "name": "ChainlinkFulfilled",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "bytes32",     "name": "id",     "type": "bytes32"    }   ],   "name": "ChainlinkRequested",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "Claimed",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "Constructed",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    }   ],   "name": "Kicked",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    },    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    }   ],   "name": "Locked",   "type": "event"  },  {   "anonymous": false,   "inputs": [],   "name": "Reclaimed",   "type": "event"  },  {   "inputs": [],   "name": "birthStamp",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "buyer",   "outputs": [    {     "internalType": "address payable",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "buyerModelId",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "buyerModelName",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "claim",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "costETH",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistModelId",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistModelName",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistStakeActual",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistStakePromise",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "bytes32",     "name": "_APIresult",     "type": "bytes32"    }   ],   "name": "fulfillBuyerModelId",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "uint256",     "name": "_APIresult",     "type": "uint256"    }   ],   "name": "fulfillDataScientistStake",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "int256",     "name": "_APIresult",     "type": "int256"    }   ],   "name": "fulfillFloat",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "int256",     "name": "_APIresult",     "type": "int256"    }   ],   "name": "fulfillGetPayoutPending",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "uint256",     "name": "_APIresult",     "type": "uint256"    }   ],   "name": "fulfillLatestSubmissionRound",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "uint256",     "name": "_APIresult",     "type": "uint256"    }   ],   "name": "fulfillRoundNumber",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getHour",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getMinute",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getSecond",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getWeekday",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [],   "name": "kick",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "latestSubmissionCounter",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "latestSubmissionRounds",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "lock",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "locked",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "metricNames",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "metrics",   "outputs": [    {     "internalType": "int256",     "name": "",     "type": "int256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "modelNames",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "owner",   "outputs": [    {     "internalType": "address payable",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "payoutPending",   "outputs": [    {     "internalType": "int256",     "name": "",     "type": "int256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "reclaim",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "string",     "name": "_buyerModelName",     "type": "string"    }   ],   "name": "registerBuyerModelName",   "outputs": [],   "stateMutability": "payable",   "type": "function"  },  {   "inputs": [],   "name": "roundNumber",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "startTimestamp",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "totalFee",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "verified",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  } ]');

function modalPrimary() {
    modalDecision = true;
    console.log(modalDecision);
    $('#gasEstimationFailedModal').modal('toggle');
}

function modalSecondary() {
    modalDecision = false;
    console.log(modalDecision);
    $('#gasEstimationFailedModal').modal('toggle');
}

function setup() {
    console.log("SETUP");
    console.log(window.ethereum);
    if (window.ethereum) {

        console.log("E");
        window.ethereum.enable();

        web3 = new Web3(window.ethereum);
        console.log(web3.eth.accounts.length);
        console.log("A");
        console.log(web3);
        if (!web3) {
            console.log("NW3");
            $('#metaMaskRequiredModal').modal('toggle');
            return;
        }

        console.log("IF REACHED");
        console.log(web3.eth.accounts[0]);
        console.log(account);
        if (web3.eth.accounts[0] !== account) {
            console.log("IF REACHED2");
            console.log("F");
            web3.eth.getAccounts(function(err, accounts) {
                if (err != null) {
                    console.log("D2");
                    //alert("Error retrieving accounts.");
                    $('#metaMaskRequiredModal').modal();
                    return;

                }
                if (accounts.length == 0) {
                    console.log("D");
                    $('#metaMaskRequiredModal').modal();
                    return;
                }

                account = accounts[0];

                console.log('Account: ' + account);
                web3.eth.defaultAccount = account;
            });

        } else {
            console.log("IF12 REACHED");
        }


    } else {
        console.log("IF3 REACHED");
        console.log("No metamask");

        $('#metaMaskRequiredModal').modal('toggle');
        return;
    }


} //, 100);


function setUpCheck(viewB) {
    console.log(viewB);
    if (!web3) {
        console.log("not web3");
        $('#metaMaskRequiredModal').modal('toggle');
        return false;
    }
    if (window.ethereum) {
        console.log("wind eth");
        console.log("webeth");
    } else {
        console.log("not wind eth");
        $('#metaMaskRequiredModal').modal('toggle');
        return false;
    }
    if (!viewB && !contract) {

      console.log(viewB);
        console.log("not view not cont");
        $('#contractRequiredModal').modal('toggle');
        return false;
    }
    console.log("true ret");
    return true;
}

function retreiveContract() {

    console.log("true retA");
    if (!setUpCheck(true)) {
        return;
    }
    console.log("true retB");
    contractAddress = $("#newInfo").val().trim();
    contract = new web3.eth.Contract(abi, $("#newInfo").val().trim());
    console.log(contract);
    document.getElementById("addressLabel").innerHTML = "Contract Address: " + '<a target="_blank" href = "https://kovan.etherscan.io/address/' + $("#newInfo").val() + '">' + $("#newInfo").val().trim() + "</a>" + '<a data-container="body" data-toggle="tooltip" data-placement="top" title="Copy Shareable Steak View Link" style = "float:right;verical-algin:center"  onclick ="shareableLink()"><svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-link" viewBox="0 0 16 16"><path d="M6.354 5.5H4a3 3 0 0 0 0 6h3a3 3 0 0 0 2.83-4H9c-.086 0-.17.01-.25.031A2 2 0 0 1 7 10.5H4a2 2 0 1 1 0-4h1.535c.218-.376.495-.714.82-1z"/><path d="M9 5.5a3 3 0 0 0-2.83 4h1.098A2 2 0 0 1 9 6.5h3a2 2 0 1 1 0 4h-1.535a4.02 4.02 0 0 1-.82 1H12a3 3 0 1 0 0-6H9z"/></svg></a>';

    contract.methods.dataScientistModelName().call().then(function(info) {
        

        document.getElementById('dataScientistModelNameLabel').innerHTML = "Data Scientist Model Name: " + '<a target="_blank" href = "https://numer.ai/' + String(info) + '">' + String(info) + "</a>";
    });



    contract.methods.costETH().call().then(function(info) {
        

        document.getElementById('costETHLabel').innerHTML = "Contract Cost: " + (new BigNumber(info)).shiftedBy(-18).toString() + " ETH";
        //document.getElementById('costETHLabel').className = document.getElementById('costETHLabel').className +  " text-success";
    });
    contract.methods.dataScientistStakePromise().call().then(function(info) {
        
        
        document.getElementById('dataScientistStakePromiseLabel').innerHTML = "Promised Data Scientist Stake: " + (new BigNumber(info)).shiftedBy(-18).toString() + " NMR";
    });

    contract.methods.dataScientistStakeActual().call().then(function(info) {
        
        if(info != 1)
        {
            document.getElementById('dataScientistStakeActualLabel').innerHTML = "Actual Data Scientist Stake: " + (new BigNumber(info)).shiftedBy(-18).toString() + " NMR";
        }
        else
        {
            document.getElementById('dataScientistStakeActualLabel').innerHTML = "Actual Data Scientist Stake: Not Determined.";
        }
        
    });

    contract.methods.locked().call().then(function(info) {
        

        document.getElementById('lockedLabel').innerHTML = "Locked: " + String(info);
    });

    contract.methods.roundNumber().call().then(function(info) {
        
        if(info != 0)
        {
            document.getElementById('roundNumberLabel').innerHTML = "Round Number: " + String(info);
        }
        else
        {
            document.getElementById('roundNumberLabel').innerHTML = "Round Number: Not Determined";
        }
    });

    contract.methods.birthStamp().call().then(function(info) {
        
        var dateT = new Date(0);
        dateT.setUTCSeconds(info);
        document.getElementById('birthStampLabel').innerHTML = "Birth Date: " + String(dateT.toUTCString().replace("GMT","UTC"));
    });

    contract.methods.startTimestamp().call().then(function(info) {
        
        
        var dateT = new Date(0);
        dateT.setUTCSeconds(info);
        console.log(info == 0);
        startDate = dateT;
        if(info != 0 )
        {
         document.getElementById('startStampLabel').innerHTML = "Start Date: " + String(dateT.toUTCString().replace("GMT","UTC"));
        }
        else
        {
            document.getElementById('startStampLabel').innerHTML = "Start Date: Not Determined";
        }
    });

    contract.methods.buyerModelName().call().then(function(info) {
        
        if(info.length > 0)
        {
            document.getElementById('buyerModelNameLabel').innerHTML = "Buyer Model Name: " + '<a target="_blank" href = "https://numer.ai/' + String(info) + '">' + String(info) + "</a>";
        }
        else
        {
            document.getElementById('buyerModelNameLabel').innerHTML = "Buyer Model Name: Not Determined";
        }
    });

    contract.methods.buyerModelId().call().then(function(info) {
        
        if(info.length > 0)
        {
            document.getElementById('buyerModelIdLabel').innerHTML = "Buyer Model Id: " + String(info);
        }
        else
        {
            document.getElementById('buyerModelIdLabel').innerHTML = "Buyer Model Id: Not Determined";
        }
    });

    contract.methods.metrics(3).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('buyerModelCORRLabel').innerHTML = "Buyer Model Live CORR: " +(new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('buyerModelCORRLabel').innerHTML = "Buyer Model Live CORR: Not Determined";
        }
    });

    contract.methods.metrics(4).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('buyerModelMMCLabel').innerHTML = "Buyer Model Live MMC: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('buyerModelMMCLabel').innerHTML = "Buyer Model Live MMC: Not Determined";
        }
    });

    contract.methods.metrics(5).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('buyerModelFNCLabel').innerHTML = "Buyer Model Live FNC: " +(new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('buyerModelFNCLabel').innerHTML = "Buyer Model Live FNC: Not Determined";
        }
    });

    contract.methods.payoutPending(0).call().then(function(info) {
        

        document.getElementById('buyerModelPendingPayoutLabel').innerHTML = "Buyer Model Live Pending Payout: " + (new BigNumber(info)).shiftedBy(-18).toString();

    });

    contract.methods.metrics(0).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('sellerModelCORRLabel').innerHTML = "Seller Model Live CORR: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('sellerModelCORRLabel').innerHTML = "Seller Model Live CORR: Not Determined";
        }
    });

    contract.methods.metrics(1).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('sellerModelMMCLabel').innerHTML = "Seller Model Live MMC: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('sellerModelMMCLabel').innerHTML = "Seller Model Live MMC: Not Determined";
        }
    });

    contract.methods.metrics(2).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('sellerModelFNCLabel').innerHTML = "Seller Model Live FNC: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('sellerModelFNCLabel').innerHTML = "Seller Model Live FNC: Not Determined";
        }
    });

    contract.methods.payoutPending(1).call().then(function(info) {
        

            document.getElementById('sellerModelPendingPayoutLabel').innerHTML = "Seller Model Live Pending Payout: " + (new BigNumber(info)).shiftedBy(-18).toString();

    });


}

function sendWrapper(method, options) {
    console.log(options);
    txTemp = document.createElement("li");
    //{from: account, value: info }
    method.send(options, function(error, transactionHash) {

        txTemp.className = "list-group-item";
        txTemp.innerHTML = '<a target="_blank" href = "https://kovan.etherscan.io/tx/' + transactionHash + '">' + actionDesc + " " + String(new Date()) + "</a>";

        //alert(transactionHash);

    }).catch(function(e) {
        console.log(e.message);
        if (!(String(e.message) === String("MetaMask Tx Signature: User denied transaction signature."))) {
            document.getElementById("transactionLog").appendChild(txTemp);
        }
        return e;
    }).then(function(e) {
        console.log(e.message);
        if (!(String(e.message) === String("MetaMask Tx Signature: User denied transaction signature."))) {
            document.getElementById("transactionLog").appendChild(txTemp);
        }
    });
}

function gasEstimateCheckModalWrapper(method, runIfAlternate) {
     var caught = false;
    method.estimateGas().catch(function() {
        caught = true;
        $('#gasEstimationFailedModal').modal().on('hidden.bs.modal', function(e) {
            console.log("closed");
            if (!modalDecision) {
                runIfAlternate();

            }
            modalDecision = true;
        });

    }).then(
        
        function() {
          if(caught)
          {
            return;
          }
            runIfAlternate();
        }
    );
}



function registerBuyerName() {
    if (!setUpCheck(false)) {
        return;
    }

    actionDesc = "Register Buyer Name.";
    toTransact = contract.methods.registerBuyerModelName($("#buyerModelNameInput").val().trim());
    gasEstimateCheckModalWrapper(toTransact, function() {
        contract.methods.costETH().call().then(function(info) {
            sendWrapper(toTransact, {
                from: account,
                value: info
            }, actionDesc);



            //document.getElementById('costETHLabel').className = document.getElementById('costETHLabel').className +  " text-success";
        });

    });



}

function reclaim() {
    if (!setUpCheck(false)) {
        return;
    }
    actionDesc = "Reclaim.";
    toTransact = contract.methods.reclaim();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function kick() {
    if (!setUpCheck(false)) {
        return;
    }
    actionDesc = "Kick.";
    toTransact = contract.methods.kick();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function lock() {
    if (!setUpCheck(false)) {
        return;
    }
    actionDesc = "Lock.";
    toTransact = contract.methods.lock();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function claim() {
    if (!setUpCheck(false)) {
        return;
    }
    console.log("contract");
    console.log(contract);
    console.log("account");
    console.log(account);
    actionDesc = "Claim.";
    toTransact = contract.methods.claim();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function deploy() {
    if (!setUpCheck(true)) {
        return;
    }
    txTemp = document.createElement("li");
    var bcr = bc;
    toDeploy = new web3.eth.Contract(abi, {
        from: account,
        data: bcr
    });
    dSMN = $("#dataScientistModelNameInput").val().trim();
    sP = new BigNumber($("#dataScientistStakePromiseInput").val().trim()).shiftedBy(18);
    cE = new BigNumber($("#costETHInput").val().trim()).shiftedBy(18);
    toDeploy.deploy({
        data: bcr,
        arguments: [dSMN, cE, sP]
    }).send({
        from: account
    }).then(

        function(newContractInstance) {

            txTemp = document.createElement("li");
            txTemp.className = "list-group-item";
            txTemp.innerHTML = '<a target="_blank" href = "https://kovan.etherscan.io/address/' + newContractInstance.options.address + '">' + "Deploy." + " " + String(new Date()) + "</a>";
            document.getElementById("transactionLog").appendChild(txTemp);
            $("#newInfo").val(newContractInstance.options.address);
            retreiveContract();
        }
    );
}

function highlightCalendarColumn(selectedCol)
{
    
    var allTd = document.getElementsByTagName("td");

    for(var i = 0;i < allTd.length;i++)
    {

                allTd[i].style = ""; 

    }
    allTd = document.getElementsByTagName("th");
    for(var i = 0;i < allTd.length;i++)
    {

                allTd[i].style = ""; 

    }

    allTd = document.getElementsByTagName("td");

    for(var i = 0;i < allTd.length;i++)
    {
        if(allTd[i].getAttribute("calendarColumn") !== null && allTd[i].getAttribute("calendarColumn").includes(selectedCol))
        {
            allTd[i].style = "border-style:solid;border-width:2px";
            if(allTd[i].getAttribute("calendarColumn").includes("nb"))
            {
                allTd[i].style = "border-style:solid;border-width:2px;border-bottom:none"; 
            }
        }
    }
    allTd = document.getElementsByTagName("th");
    for(var i = 0;i < allTd.length;i++)
    {
        if(allTd[i].getAttribute("calendarColumn") !== null && allTd[i].getAttribute("calendarColumn").includes(selectedCol))
        {
            allTd[i].style = "border-style:solid;border-width:2px";
            if(allTd[i].getAttribute("calendarColumn").includes("nb"))
            {
                allTd[i].style = "border-style:solid;border-width:2px;border-bottom:none"; 
            }
        }
    }
}

function shareableLink()
{
    
    navigator.clipboard.writeText(window.location.href.slice(0,window.location.href.lastIndexOf("/") + 1) + "?" + contractAddress);
}


window.addEventListener('load', () => {
    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
      });
    setup();
    //$("#metaMaskRequiredModal").on("hidden.bs.modal",setup);

    console.log("ABC",window.location.href.slice(window.location.href.indexOf("?")+1).length);
    if(window.location.href.slice(window.location.href.indexOf("?")+1).length > 0 && window.location.href.toString().includes("?"))
    {
        console.log("ABC",window.location.href.slice(window.location.href.indexOf("?")+1));
        document.getElementById("newInfo").value = (window.location.href.slice(window.location.href.indexOf("?")+1));
        retreiveContract();
    }

    var calendarInterval = setInterval(
    function()
    {
        var d = new Date();



        var n = d.toUTCString();
        console.log(n);
        document.getElementById("UTCclock").innerHTML = n.replace("GMT","UTC");
        if(startDate !== undefined && startDate.getTime() !== 0)
        {
            console.log("have startdate",startDate);
            console.log(startDate.getTime(),d.getTime());
            
            var elapsed = (d.getTime() - startDate.getTime())/3600000;

            //highlightCalendarColumn("" + (d.getDay() + 1))
            console.log("UTC DEB HOURS",typeof d.getUTCHours());
            if(elapsed > 198)
            {
                highlightCalendarColumn("9");
            }
            else
            {
                switch(d.getUTCDay())
            {
                case 0:
                    if(elapsed > 48)
                    {
                        highlightCalendarColumn("8");
                    }
                    else
                    {
                        highlightCalendarColumn("1");
                    }
                    break;

                case 1:
                    console.log("UTC HOURS",d.getUTCHours());
                     if(d.getUTCHours() <=13)
                    {
                        highlightCalendarColumn("2");
                    }
                    break;

                case 2:
                    highlightCalendarColumn("3");
                    break;

                case 3:
                    highlightCalendarColumn("4");
                    break;
                
                case 4:
                    highlightCalendarColumn("5");
                    break;

                case 5:
                    highlightCalendarColumn("6");
                    break;
                
                case 6:
                    if(elapsed > 48)
                    {
                        highlightCalendarColumn("7");
                    }
                    else
                    {
                        if(d.getUTCHours >= 18)
                        {
                            highlightCalendarColumn("0");
                        }
                    }
                    break;
                


            }
            }
            


        }
    },500);


});
