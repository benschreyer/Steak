var contract;
var account = null;
var web3;


var actionDesc;
//true for modal main
var modalDecision = true;

var startDate;



var contractAddress = "";
const bc = '0x60806040526001600455600680546001600160a01b03191673a9187c8c9f692fe2ca6b80069e87df23b34157a31790553480156200003c57600080fd5b5060405162004aa838038062004aa8833981810160405260608110156200006257600080fd5b81019080805160405193929190846401000000008211156200008357600080fd5b9083019060208201858111156200009957600080fd5b8251640100000000811182820188101715620000b457600080fd5b82525081516020918201929091019080838360005b83811015620000e3578181015183820152602001620000c9565b50505050905090810190601f168015620001115780820380516001836020036101000a031916815260200191505b506040908152602082015191015142602f559092509050662386f26fc10000811015620001705760405162461bcd60e51b815260040180806020018281038252604481526020018062004a646044913960600191505060405180910390fd5b60408051808201909152600080825260208201526200019490601b9060026200051d565b506000601d556001600f55602e805461ffff19169055600d8290558251620001c490600790602086019062000565565b50600e819055602280546001600160a01b03191633179055620001e662000473565b6024805473aa1dc356dc4b18f30c347798fd5379f3d77abc5b6001600160a01b031991821681179092557f623732383564343835396461346232383963373836316462393731626166306160255567016345785d8a00006026819055602780548316841790557f35306437626361346463663734363261383365373238326236323634363436366028556029819055602a805490921690921790557f6337646437326361313462343466306339623663666364346237656330613263602b55602c5567120a871cc0020000602d5560408051808201909152600280825260016020830152620002d8916010916200051d565b5060006012556040805160c08101825260001980825260208201819052918101919091526001606082018190526080820181905260a082015262000321906014906006620005d8565b506000601a556040805160a081018252600b606082019081526a31b7b93932b630ba34b7b760a91b60808301528152815180830183526003808252626d6d6360e81b602083810191909152808401929092528351808501855281815262666e6360e81b92810192909252928201526200039e91601e91906200060e565b50600d54600e546040805160208101849052908101829052606080825260078054600260001961010060018416150201909116049183018290527f55e6d2419970dfeebb3bbe50864cfc7aad527644cb56e79760995944114d1f8b9490939092909181906080820190869080156200045a5780601f106200042e576101008083540402835291602001916200045a565b820191906000526020600020905b8154815290600101906020018083116200043c57829003601f168201915b505094505050505060405180910390a1505050620006e4565b620004f973c89bd4e1632d3a43cb03aaad5262cbe4038bc5716001600160a01b03166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b158015620004c557600080fd5b505afa158015620004da573d6000803e3d6000fd5b505050506040513d6020811015620004f157600080fd5b5051620004fb565b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b826002810192821562000553579160200282015b8281111562000553578251829060ff1690559160200191906001019062000531565b506200056192915062000661565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620005a857805160ff191683800117855562000553565b8280016001018555821562000553579182015b8281111562000553578251825591602001919060010190620005bb565b826006810192821562000553579160200282015b8281111562000553578251829060000b905591602001919060010190620005ec565b826003810192821562000653579160200282015b828111156200065357825180516200064291849160209091019062000565565b509160200191906001019062000622565b506200056192915062000678565b5b8082111562000561576000815560010162000662565b80821115620005615760006200068f828262000699565b5060010162000678565b50805460018160011615610100020316600290046000825580601f10620006c15750620006e1565b601f016020900490600052602060002090810190620006e1919062000661565b50565b61437080620006f46000396000f3fe60806040526004361061020f5760003560e01c80638e9efbaa11610118578063c6404d52116100a0578063d9c039d51161006f578063d9c039d51461071e578063e274cfd414610733578063e6fd48bc1461075d578063f83d08ba14610772578063fa93f883146107875761020f565b8063c6404d52146106af578063cd45c958146106df578063cf309012146106f4578063cf7d2489146107095761020f565b8063a5f1789a116100e7578063a5f1789a1461057f578063ac01495e146105af578063b5f66c10146105c4578063ba67b513146105f4578063bbb82d891461069a5761020f565b80638e9efbaa146104fb57806391db3da51461052557806396da66f21461053a578063a02ae5cc1461056a5761020f565b80635c3c71501161019b5780637a67b4791161016a5780637a67b4791461047d57806380e9071b146104925780638127f5dd146104a75780638aa001fc146104bc5780638da5cb5b146104e65761020f565b80635c3c7150146103e35780636682f449146103f85780636d9aac62146104225780637150d8ae1461044c5761020f565b80634e2786fb116101e25780634e2786fb1461032e5780634e71d92d14610343578063558eaa301461036c57806355954931146103815780635a42b392146103b35761020f565b80631df4ccfc146102145780633e239e1a1461023b5780634ac1ad78146102655780634dff2c061461028f575b600080fd5b34801561022057600080fd5b506102296107b1565b60408051918252519081900360200190f35b34801561024757600080fd5b506102296004803603602081101561025e57600080fd5b50356107b7565b34801561027157600080fd5b506102296004803603602081101561028857600080fd5b50356107d2565b34801561029b57600080fd5b506102b9600480360360208110156102b257600080fd5b50356107e4565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102f35781810151838201526020016102db565b50505050905090810190601f1680156103205780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561033a57600080fd5b5061022961087f565b34801561034f57600080fd5b50610358610885565b604080519115158252519081900360200190f35b34801561037857600080fd5b506102b96109fa565b34801561038d57600080fd5b506103b1600480360360408110156103a457600080fd5b5080359060200135610a55565b005b3480156103bf57600080fd5b506103b1600480360360408110156103d657600080fd5b5080359060200135610b3f565b3480156103ef57600080fd5b506102b9611012565b34801561040457600080fd5b506102296004803603602081101561041b57600080fd5b503561106d565b34801561042e57600080fd5b506102296004803603602081101561044557600080fd5b5035611081565b34801561045857600080fd5b5061046161108e565b604080516001600160a01b039092168252519081900360200190f35b34801561048957600080fd5b5061035861109d565b34801561049e57600080fd5b506103586113a3565b3480156104b357600080fd5b506102296115c0565b3480156104c857600080fd5b50610229600480360360208110156104df57600080fd5b50356115c6565b3480156104f257600080fd5b506104616115d0565b34801561050757600080fd5b506102b96004803603602081101561051e57600080fd5b50356115df565b34801561053157600080fd5b506102296115ec565b34801561054657600080fd5b506103b16004803603604081101561055d57600080fd5b50803590602001356115f2565b34801561057657600080fd5b50610229611753565b34801561058b57600080fd5b506103b1600480360360408110156105a257600080fd5b5080359060200135611759565b3480156105bb57600080fd5b506102b961192e565b3480156105d057600080fd5b506103b1600480360360408110156105e757600080fd5b5080359060200135611989565b6103b16004803603602081101561060a57600080fd5b81019060208101813564010000000081111561062557600080fd5b82018360208201111561063757600080fd5b8035906020019184600183028401116401000000008311171561065957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611a29945050505050565b3480156106a657600080fd5b50610358611ef4565b3480156106bb57600080fd5b506103b1600480360360408110156106d257600080fd5b5080359060200135611f02565b3480156106eb57600080fd5b50610229611fc4565b34801561070057600080fd5b50610358611fca565b34801561071557600080fd5b506102b9611fd3565b34801561072a57600080fd5b5061022961202e565b34801561073f57600080fd5b506102296004803603602081101561075657600080fd5b5035612034565b34801561076957600080fd5b50610229612041565b34801561077e57600080fd5b50610358612047565b34801561079357600080fd5b50610229600480360360208110156107aa57600080fd5b50356123bd565b602d5481565b60006018603c8084045b04816107c957fe5b0690505b919050565b600060076004620151808404016107c9565b601e81600381106107f157fe5b018054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815293508301828280156108775780601f1061084c57610100808354040283529160200191610877565b820191906000526020600020905b81548152906001019060200180831161085a57829003601f168201915b505050505081565b60135481565b60225460009042906001600160a01b031633146108d35760405162461bcd60e51b815260040180806020018281038252602b8152602001806142b7602b913960400191505060405180910390fd5b602e5460ff166109145760405162461bcd60e51b81526004018080602001828103825260228152602001806140c76022913960400191505060405180910390fd5b61091d816107d2565b60051480610933575061092f816107d2565b6006145b806109445750610942816107d2565b155b61097f5760405162461bcd60e51b8152600401808060200182810382526055815260200180613be36055913960600191505060405180910390fd5b62054600602154820311801561099b5750620ae0606021548203105b6109d65760405162461bcd60e51b81526004018080602001828103825260c5815260200180613c3860c5913960e00191505060405180910390fd5b60006012819055601a556109e86123c8565b505060006012819055601a5550600190565b600b805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108775780601f1061084c57610100808354040283529160200191610877565b60008281526005602052604090205482906001600160a01b03163314610aac5760405162461bcd60e51b815260040180806020018281038252602881526020018061428f6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b031916905551829160008051602061431b83398151915291a2601382905560105482148015610af65750601154601054145b610b315760405162461bcd60e51b815260040180806020018281038252603a815260200180614255603a913960400191505060405180910390fd5b610b39612560565b50505050565b60008281526005602052604090205482906001600160a01b03163314610b965760405162461bcd60e51b815260040180806020018281038252602881526020018061428f6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b031916905551829160008051602061431b83398151915291a2816014601a5460068110610bd757fe5b0155601a80546001019081905560061415611005576000601a819055601255601754601454148015610c0c5750601854601554145b8015610c1b5750601954601654145b8015610c2a5750601054601354145b8015610c395750601154601054145b8015610c495750600e54600f5410155b8015610c565750601b5415155b8015610c635750601c5415155b15610e5b57602e805461ff0019166101001790556000610c81612859565b602254604080516370a0823160e01b815230600482015290519293506001600160a01b038085169363a9059cbb939091169184916370a0823191602480820192602092909190829003018186803b158015610cdb57600080fd5b505afa158015610cef573d6000803e3d6000fd5b505050506040513d6020811015610d0557600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610d5657600080fd5b505af1158015610d6a573d6000803e3d6000fd5b505050506040513d6020811015610d8057600080fd5b5050601454601554601654601754601854601954601354601054601154600f54604080519a8b5260208b0199909952898901979097526060890195909552608088019390935260a087019190915260c086015260e0850152610100840152610120830152517f9d4653ab607316222770c3fb15f31aa901fe45c8e2fc4c4d7893cd433424d9b4918190036101400190a16006546040516001600160a01b03909116906064470480156108fc02916000818181858888f19350505050158015610e4c573d6000803e3d6000fd5b506022546001600160a01b0316ff5b602e805461ff00191690556000610e70612859565b602254604080516370a0823160e01b815230600482015290519293506001600160a01b038085169363a9059cbb939091169184916370a0823191602480820192602092909190829003018186803b158015610eca57600080fd5b505afa158015610ede573d6000803e3d6000fd5b505050506040513d6020811015610ef457600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b158015610f4557600080fd5b505af1158015610f59573d6000803e3d6000fd5b505050506040513d6020811015610f6f57600080fd5b5050601454601554601654601754601854601954601354601054601154600f54604080519a8b5260208b0199909952898901979097526060890195909552608088019390935260a087019190915260c086015260e0850152610100840152610120830152517f9d4653ab607316222770c3fb15f31aa901fe45c8e2fc4c4d7893cd433424d9b4918190036101400190a15061100d565b610b39612868565b505050565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108775780601f1061084c57610100808354040283529160200191610877565b6010816002811061107a57fe5b0154905081565b6014816006811061107a57fe5b6023546001600160a01b031681565b60225460009042906001600160a01b031633146110eb5760405162461bcd60e51b8152600401808060200182810382526022815260200180613e976022913960400191505060405180910390fd5b602e5460ff1615611143576040805162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74206b69636b206c6f636b656420636f6e74726163742e00000000604482015290519081900360640190fd5b6023546001600160a01b0316611194576040805162461bcd60e51b8152602060048201526011602482015270273790313abcb2b9103a379035b4b1b59760791b604482015290519081900360640190fd5b62026ac06021548203106111d95760405162461bcd60e51b815260040180806020018281038252604c8152602001806140e9604c913960600191505060405180910390fd5b6111e2816107d2565b158061120957506111f2816107d2565b60011480156112095750600e611207826107b7565b105b6112445760405162461bcd60e51b8152600401808060200182810382526052815260200180613d1e6052913960600191505060405180910390fd5b6023546040516001600160a01b03909116904780156108fc02916000818181858888f1935050505015801561127d573d6000803e3d6000fd5b5047156112bb5760405162461bcd60e51b815260040180806020018281038252602b815260200180613eb9602b913960400191505060405180910390fd5b60408051602080825260088054600260001961010060018416150201909116049183018290527fa9cc95a8903112deb977e7d46d0301afe843f1f9516bcf7b6eac3e69fdf80ea29390929182918201908490801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b50509250505060405180910390a1602380546001600160a01b0319169055604080516020810191829052600090819052611396916008916139d2565b5050600060215550600190565b600080429050620ae0606021548203116113ee5760405162461bcd60e51b815260040180806020018281038252605e815260200180614135605e913960600191505060405180910390fd5b6023546001600160a01b031633146114375760405162461bcd60e51b815260040180806020018281038252602d815260200180613fb2602d913960400191505060405180910390fd5b602e54610100900460ff161561147e5760405162461bcd60e51b8152600401808060200182810382526021815260200180613cfd6021913960400191505060405180910390fd5b6000611488612859565b602254604080516370a0823160e01b815230600482015290519293506001600160a01b038085169363a9059cbb939091169184916370a0823191602480820192602092909190829003018186803b1580156114e257600080fd5b505afa1580156114f6573d6000803e3d6000fd5b505050506040513d602081101561150c57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b15801561155d57600080fd5b505af1158015611571573d6000803e3d6000fd5b505050506040513d602081101561158757600080fd5b50506040517fcc4d233c9fd6c1fe42909b8af6a1755052683997a05f2f1c65ab303d051a43a290600090a16023546001600160a01b0316ff5b600e5481565b6000603c826107c9565b6022546001600160a01b031681565b600981600281106107f157fe5b600d5481565b60008281526005602052604090205482906001600160a01b031633146116495760405162461bcd60e51b815260040180806020018281038252602881526020018061428f6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b031916905551829160008051602061431b83398151915291a28160106012546002811061168a57fe5b0155601280546001908101918290551415611746576117406009601254600281106116b157fe5b01805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156117365780601f1061170b57610100808354040283529160200191611736565b820191906000526020600020905b81548152906001019060200180831161171957829003601f168201915b5050505050612ce5565b5061100d565b6000601255610b39612e53565b600f5481565b60008281526005602052604090205482906001600160a01b031633146117b05760405162461bcd60e51b815260040180806020018281038252602881526020018061428f6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b031916905551829160008051602061431b83398151915291a26117ea82612f3a565b80516117fe91600c916020909101906139d2565b506040805181815260088054600260001961010060018416150201909116049282018390527f54b74939675f041c6d358c3416a2f8691a003cd01954139d8487ea89cbf54278929091600c91819060208201906060830190869080156118a55780601f1061187a576101008083540402835291602001916118a5565b820191906000526020600020905b81548152906001019060200180831161188857829003601f168201915b50508381038252845460026000196101006001841615020190911604808252602090910190859080156119195780601f106118ee57610100808354040283529160200191611919565b820191906000526020600020905b8154815290600101906020018083116118fc57829003601f168201915b505094505050505060405180910390a1505050565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108775780601f1061084c57610100808354040283529160200191610877565b60008281526005602052604090205482906001600160a01b031633146119e05760405162461bcd60e51b815260040180806020018281038252602881526020018061428f6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b031916905551829160008051602061431b83398151915291a2600f82905560006012819055610b39906009906116b1565b60225442906001600160a01b0316331415611a755760405162461bcd60e51b8152600401808060200182810382526030815260200180613ee46030913960400191505060405180910390fd5b6023546001600160a01b031615611ad3576040805162461bcd60e51b815260206004820152601b60248201527f436f6e747261637420616c7265616479206861732062757965722e0000000000604482015290519081900360640190fd5b600d54341015611b145760405162461bcd60e51b8152600401808060200182810382526028815260200180613de26028913960400191505060405180910390fd5b611b1d816107d2565b6006148015611b3457506011611b32826107b7565b115b80611b455750611b43816107d2565b155b611b805760405162461bcd60e51b81526004018080602001828103825260558152602001806141b46055913960600191505060405180910390fd5b602e5460ff1615611bc25760405162461bcd60e51b8152600401808060200182810382526032815260200180613f556032913960400191505060405180910390fd5b602380546001600160a01b0319163317905581518290611c135760405162461bcd60e51b8152600401808060200182810382526028815260200180613bbb6028913960400191505060405180910390fd5b60088054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015611c9f5780601f10611c7457610100808354040283529160200191611c9f565b820191906000526020600020905b815481529060010190602001808311611c8257829003601f168201915b505050505090508051600014611ce65760405162461bcd60e51b815260040180806020018281038252602b815260200180613f87602b913960400191505060405180910390fd5b8351611cf99060089060208701906139d2565b506021839055604080516008805460606020601f600260001961010060018716150201909416939093049283018190040284018101855293830181815292938493929190840182828015611d8e5780601f10611d6357610100808354040283529160200191611d8e565b820191906000526020600020905b815481529060010190602001808311611d7157829003601f168201915b50505091835250506007805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611e205780601f10611df557610100808354040283529160200191611e20565b820191906000526020600020905b815481529060010190602001808311611e0357829003601f168201915b5050509190925250611e3791600991506002613a50565b5060408051346020820181905282825260088054600260001961010060018416150201909116049383018490527f608e57d52d59229eb27eb28e93e418ea49ade1e3d536dc1bb0331eba63109784939092908190606082019085908015611edf5780601f10611eb457610100808354040283529160200191611edf565b820191906000526020600020905b815481529060010190602001808311611ec257829003601f168201915b5050935050505060405180910390a150505050565b602e54610100900460ff1681565b60008281526005602052604090205482906001600160a01b03163314611f595760405162461bcd60e51b815260040180806020018281038252602881526020018061428f6028913960400191505060405180910390fd5b60008181526005602052604080822080546001600160a01b031916905551829160008051602061431b83398151915291a281601b601d5460028110611f9a57fe5b0155601d54600111611fb3576000601d55611740612868565b601d80546001019055610b39612560565b602f5481565b602e5460ff1681565b600c805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156108775780601f1061084c57610100808354040283529160200191610877565b60125481565b601b816002811061107a57fe5b60215481565b60225460009042906001600160a01b031633146120ab576040805162461bcd60e51b815260206004820152601d60248201527f4f6e6c79206f776e65722063616e206c6f636b20636f6e74726163742e000000604482015290519081900360640190fd5b602e5460ff16156120ed5760405162461bcd60e51b815260040180806020018281038252602c815260200180613e2d602c913960400191505060405180910390fd5b6023546001600160a01b031661213e576040805162461bcd60e51b8152602060048201526011602482015270273790313abcb2b9103a37903637b1b59760791b604482015290519081900360640190fd5b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156121ca5780601f1061219f576101008083540402835291602001916121ca565b820191906000526020600020905b8154815290600101906020018083116121ad57829003601f168201915b50505050509050805160001415612228576040805162461bcd60e51b815260206004820152601a60248201527f4e6f2062757965724d6f64656c4e616d6520746f206c6f636b2e000000000000604482015290519081900360640190fd5b62026ac060215483031061226d5760405162461bcd60e51b8152600401808060200182810382526041815260200180613f146041913960600191505060405180910390fd5b612276826107d2565b158061229d5750612286826107d2565b600114801561229d5750600e61229b836107b7565b105b6122d85760405162461bcd60e51b815260040180806020018281038252604c815260200180614209604c913960600191505060405180910390fd5b60006122e2612859565b9050602d54816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561233457600080fd5b505afa158015612348573d6000803e3d6000fd5b505050506040513d602081101561235e57600080fd5b5051101561239d5760405162461bcd60e51b815260040180806020018281038252605b815260200180614025605b913960600191505060405180910390fd5b602e805460ff191660011790556123b2613040565b506001935050505090565b6000603c80836107c1565b60006123d2613a9c565b602b546123e79030630b5f66c160e41b613192565b90506124a96040518060400160405280600381526020016219d95d60ea1b8152506007604051602001808061408060479139604701828054600181600116156101000203166002900480156124735780601f10612451576101008083540402835291820191612473565b820191906000526020600020905b81548152906001019060200180831161245f575b50506e22297b746f74616c5374616b657d7d60881b815260408051601019818403018152600f90920190528593925090506131b7565b61250f604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060400160405280601d81526020017f646174612e76325573657250726f66696c652e746f74616c5374616b65000000815250836131b79092919063ffffffff16565b60408051808201909152600581526474696d657360d81b602082015261253f908290670de0b6b3a76400006131d5565b602a54602c5461255a916001600160a01b03169083906131f3565b91505090565b600061256a613a9c565b60285461257f903063632026a960e11b613192565b90506060601d5460001415612620576008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156126145780601f106125e957610100808354040283529160200191612614565b820191906000526020600020905b8154815290600101906020018083116125f757829003601f168201915b505050505090506126ae565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156126a65780601f1061267b576101008083540402835291602001916126a6565b820191906000526020600020905b81548152906001019060200180831161268957829003601f168201915b505050505090505b60135460408051808201909152600381526219d95d60ea1b60208201526127c5906126d8836133c1565b846040516020018080613b656056913960560183805190602001908083835b602083106127165780518252601f1990920191602091820191016126f7565b51815160209384036101000a60001901801990921691161790526a163ab9b2b93730b6b29d1160a91b919093019081528451600b90910192850191508083835b602083106127755780518252601f199092019160209182019101612756565b6001836020036101000a03801982511681845116808217855250505050505090500180613d70602a9139602a0192505050604051602081830303815290604052856131b79092919063ffffffff16565b612806604051806040016040528060048152602001630e0c2e8d60e31b815250604051806080016040528060468152602001613fdf604691398591906131b7565b60408051808201909152600581526474696d657360d81b6020820152612836908490670de0b6b3a76400006131d5565b602754602954612851916001600160a01b03169085906131f3565b935050505090565b6002546001600160a01b031690565b6000612872613a9c565b6028546128879030632d2159c960e11b613192565b90506000601354905060606002601a54111561292f576008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156129235780601f106128f857610100808354040283529160200191612923565b820191906000526020600020905b81548152906001019060200180831161290657829003601f168201915b505050505090506129bd565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156129b55780601f1061298a576101008083540402835291602001916129b5565b820191906000526020600020905b81548152906001019060200180831161299857829003601f168201915b505050505090505b6060601e6003601a54816129cd57fe5b06600381106129d857fe5b01805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015612a5d5780601f10612a3257610100808354040283529160200191612a5d565b820191906000526020600020905b815481529060010190602001808311612a4057829003601f168201915b50505050509050612bef6040518060400160405280600381526020016219d95d60ea1b815250612a8c856133c1565b84846040516020018080613b656056913960560184805190602001908083835b60208310612acb5780518252601f199092019160209182019101612aac565b51815160209384036101000a60001901801990921691161790526a163ab9b2b93730b6b29d1160a91b919093019081528551600b90910192860191508083835b60208310612b2a5780518252601f199092019160209182019101612b0b565b51815160209384036101000a60001901801990921691161790527f22297b726f756e644461696c79506572666f726d616e6365737b000000000000919093019081528451601a90910192850191508083835b60208310612b9b5780518252601f199092019160209182019101612b7c565b6001836020036101000a03801982511681845116808217855250505050505090500180627d7d7d60e81b8152506003019350505050604051602081830303815290604052866131b79092919063ffffffff16565b612c91604051806040016040528060048152602001630e0c2e8d60e31b8152508260405160200180806142e26039913960390182805190602001908083835b60208310612c4d5780518252601f199092019160209182019101612c2e565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052866131b79092919063ffffffff16565b60408051808201909152600581526474696d657360d81b6020820152612cc1908590670de0b6b3a76400006131d5565b602754602954612cdc916001600160a01b03169086906131f3565b94505050505090565b6000612cef613a9c565b602b54612d049030634b6d337960e11b613192565b9050612dc76040518060400160405280600381526020016219d95d60ea1b815250846040516020018080613d9a6048913960480182805190602001908083835b60208310612d635780518252601f199092019160209182019101612d44565b5181516020939093036101000a60001901801990911692169190911790527f222c746f75726e616d656e743a38297b726f756e644e756d6265727d7d00000092019182525060408051808303600219018152601d90920190528593925090506131b7565b612e08604051806040016040528060048152602001630e0c2e8d60e31b815250604051806060016040528060218152602001614193602191398391906131b7565b60408051808201909152600581526474696d657360d81b6020820152612e3190829060016131d5565b602a54602c54612e4c916001600160a01b03169083906131f3565b9392505050565b6000612e5d613a9c565b602b54612e729030635595493160e01b613192565b9050612eb46040518060400160405280600381526020016219d95d60ea1b8152506040518060600160405280603e8152602001613e59603e91398391906131b7565b612f11604051806040016040528060048152602001630e0c2e8d60e31b815250604051806040016040528060148152602001733230ba30973937bab73239971817373ab6b132b960611b815250836131b79092919063ffffffff16565b60408051808201909152600581526474696d657360d81b602082015261253f90829060016131d5565b606060005b60208160ff16108015612f6d5750828160ff1660208110612f5c57fe5b1a60f81b6001600160f81b03191615155b15612f7a57600101612f3f565b60608160ff1667ffffffffffffffff81118015612f9657600080fd5b506040519080825280601f01601f191660200182016040528015612fc1576020820181803683370190505b509050600091505b60208260ff16108015612ff75750838260ff1660208110612fe657fe5b1a60f81b6001600160f81b03191615155b15612e4c57838260ff166020811061300b57fe5b1a60f81b818360ff168151811061301e57fe5b60200101906001600160f81b031916908160001a905350600190910190612fc9565b600061304a613a9c565b60255461305f90306352f8bc4d60e11b613192565b90506131196040518060400160405280600381526020016219d95d60ea1b8152506008604051602001808061408060479139604701828054600181600116156101000203166002900480156130eb5780601f106130c95761010080835404028352918201916130eb565b820191906000526020600020905b8154815290600101906020018083116130d7575b50506622297b69647d7d60c81b815260408051601819818403018152600790920190528593925090506131b7565b613177604051806040016040528060048152602001630e0c2e8d60e31b8152506040518060400160405280601581526020017419185d184b9d8c955cd95c941c9bd99a5b194b9a59605a1b815250836131b79092919063ffffffff16565b60245460265461255a916001600160a01b03169083906131f3565b61319a613a9c565b6131a2613a9c565b6131ae8186868661349c565b95945050505050565b60808301516131c690836134d9565b608083015161100d90826134d9565b60808301516131e490836134d9565b608083015161100d90826134f0565b6004546040805130606090811b60208084019190915260348084018690528451808503909101815260549093018452825192810192909220908601939093526000838152600590915281812080546001600160a01b0319166001600160a01b038816179055905182917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af991a26002546001600160a01b0316634000aea0858461329b8761354f565b6040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156132fc5781810151838201526020016132e4565b50505050905090810190601f1680156133295780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561334a57600080fd5b505af115801561335e573d6000803e3d6000fd5b505050506040513d602081101561337457600080fd5b50516133b15760405162461bcd60e51b8152600401808060200182810382526023815260200180613e0a6023913960400191505060405180910390fd5b6004805460010190559392505050565b606081806133e85750506040805180820190915260018152600360fc1b60208201526107cd565b8060005b811561340057600101600a820491506133ec565b60608167ffffffffffffffff8111801561341957600080fd5b506040519080825280601f01601f191660200182016040528015613444576020820181803683370190505b50905060001982015b841561349257600a850660300160f81b8282806001900393508151811061347057fe5b60200101906001600160f81b031916908160001a905350600a8504945061344d565b5095945050505050565b6134a4613a9c565b6134b48560800151610100613673565b50509183526001600160a01b031660208301526001600160e01b031916604082015290565b6134e682600383516136b3565b61100d8282613781565b67ffffffffffffffff198112156135105761350b828261379b565b61354b565b67ffffffffffffffff81131561352a5761350b82826137d4565b6000811261353e5761350b826000836136b3565b61354b82600183196136b3565b5050565b6060634042994660e01b6000808460000151856020015186604001518760600151600189608001516000015160405160240180896001600160a01b03168152602001888152602001878152602001866001600160a01b03168152602001856001600160e01b031916815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156136015781810151838201526020016135e9565b50505050905090810190601f16801561362e5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909d169c909c17909b5250989950505050505050505050919050565b61367b613ad1565b60208206156136905760208206602003820191505b506020808301829052604080518085526000815283019091019052815b92915050565b601781116136ce576117408360e0600585901b168317613809565b60ff81116136f8576136eb836018611fe0600586901b1617613809565b5061174083826001613821565b61ffff811161372357613716836019611fe0600586901b1617613809565b5061174083826002613821565b63ffffffff81116137505761374383601a611fe0600586901b1617613809565b5061174083826004613821565b67ffffffffffffffff811161100d5761377483601b611fe0600586901b1617613809565b50610b3983826008613821565b613789613ad1565b612e4c83846000015151848551613842565b6137a68260c3613809565b5061354b828260001903604051602001808281526020019150506040516020818303038152906040526138ee565b6137df8260c2613809565b5061354b8282604051602001808281526020019150506040516020818303038152906040526138ee565b613811613ad1565b612e4c83846000015151846138fb565b613829613ad1565b61383a848560000151518585613946565b949350505050565b61384a613ad1565b825182111561385857600080fd5b84602001518285011115613882576138828561387a87602001518786016139a4565b6002026139bb565b6000808651805187602083010193508088870111156138a15787860182525b505050602084015b602084106138c85780518252601f1990930192602091820191016138a9565b51815160001960208690036101000a019081169019919091161790525083949350505050565b6134e682600283516136b3565b613903613ad1565b8360200151831061391f5761391f8485602001516002026139bb565b83518051602085830101848153508085141561393c576001810182525b5093949350505050565b61394e613ad1565b8460200151848301111561396b5761396b858584016002026139bb565b60006001836101000a0390508551838682010185831982511617815250805184870111156139995783860181525b509495945050505050565b6000818311156139b55750816136ad565b50919050565b81516139c78383613673565b50610b398382613781565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613a1357805160ff1916838001178555613a40565b82800160010185558215613a40579182015b82811115613a40578251825591602001919060010190613a25565b50613a4c929150613aeb565b5090565b8260028101928215613a90579160200282015b82811115613a905782518051613a809184916020909101906139d2565b5091602001919060010190613a63565b50613a4c929150613b00565b6040805160a081018252600080825260208201819052918101829052606081019190915260808101613acc613ad1565b905290565b604051806040016040528060608152602001600081525090565b5b80821115613a4c5760008155600101613aec565b80821115613a4c576000613b148282613b1d565b50600101613b00565b50805460018160011615610100020316600290046000825580601f10613b435750613b61565b601f016020900490600052602060002090810190613b619190613aeb565b5056fe68747470733a2f2f6170692d746f75726e616d656e742e6e756d65722e61692f6772617068716c3f71756572793d7b726f756e645375626d697373696f6e506572666f726d616e636528726f756e644e756d6265723a4d6f64656c206e616d65206d757374206e6f7420626520656d70792f4e554c4c20737472696e672e436f6e7472616374207265776172642063616e206f6e6c792062652076616c69646174656420616e6420636c61696d6564206f6e204672696461792c2053617475726461792c206f722053756e646179205554432e4d75737420636c61696d20636f6e7472616374206265666f7265204d6f6e64617920555443206f6620746865207765656b20666f6c6c6f77696e672074686520636f6e7472616374206265696e6720656e67616765642062792074686520627579657220616e6420616674657220546875727364617920555443206f6620746865207765656b2074686520636f6e74726163742077617320656e6761676564206279207468652062757965722e2043616e6e6f7420636c61696d206f74686572776973652e43616e6e6f74207265636c61696d20766572696669656420636f6e74726163742e436f6e74726163742062757965722063616e206f6e6c79206265206b69636b656420696e206265747765656e2053756e6461792030303a30302055544320616e64204d6f6e6461792031343a30302055544322297b726f756e644461696c79506572666f726d616e6365737b7061796f757450656e64696e677d7d7d68747470733a2f2f6170692d746f75726e616d656e742e6e756d65722e61692f6772617068716c3f71756572793d7b757365724163746976697469657328757365726e616d653a22496e73756666696369656e74204554482073656e7420746f20656e74657220636f6e74726163742e756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c6543616e6e6f74206c6f636b20636f6e7472616374207468617420697320616c7265616479206c6f636b65642e68747470733a2f2f6170692d746f75726e616d656e742e6e756d65722e61692f6772617068716c3f71756572793d7b726f756e64737b6e756d6265727d7d4f6e6c79206f776e65722063616e206b69636b2066726f6d20636f6e74726163742e4661696c656420746f2072657475726e2045544820746f2062757965722e2043616e6e6f74206b69636b2e4461746120736369656e746973742063616e206e6f7420656e746572207468656972206f776e20636f6e74726163742e43616e6e6f74206c6f636b20636f6e747261637420746861742077617320656e7465726564206279206275796572206f76657220343420686f7572732061676f2e43616e6e6f742072656769737465722062757965724d6f64656c4e616d65206f6e206c6f636b656420636f6e74726163742e4d6f64656c206d757374206e6f7420616c726561647920686176652062757965724d6f64656c4e616d652e4f6e6c79207468652062757965722063616e20747269676765722061207061796d656e74207265636c61696d2e646174612e726f756e645375626d697373696f6e506572666f726d616e63652e726f756e644461696c79506572666f726d616e6365732e302e7061796f757450656e64696e67436f6e747261637420726571756972657320302e31204c494e4b20746f74616c20746f206f706572617465206f6e6365206c6f636b65642c2063757272656e74204c494e4b2062616c616e636520697320756e64657220302e312e68747470733a2f2f6170692d746f75726e616d656e742e6e756d65722e61692f6772617068716c3f71756572793d7b76325573657250726f66696c6528757365726e616d653a2243616e6e6f7420636c61696d20616e20756e6c6f636b656420636f6e74726163742e43616e6e6f74206b69636b2062757965722066726f6d20636f6e747261637420746861742077617320656e7465726564206279206275796572206f76657220343420686f7572732061676f2e4d75737420776169742031393820686f7572732028382e32352064617973292066726f6d206275796572206d6f64656c206e616d6520726567697374726174696f6e20746f207265636c61696d206661696c656420636f6e74726163742e646174612e75736572416374697669746965732e302e726f756e644e756d626572436f6e74726163742063616e206f6e6c7920626520656e7465726564206279206275796572206265747765656e2053617475726461792031383a30302055544320616e642053756e6461792032343a303020555443436f6e74726163742063616e206f6e6c79206265206c6f636b656420696e206265747765656e2053756e6461792030303a30302055544320616e64204d6f6e6461792031343a303020555443416c6c207375626d697373696f6e73206f6e206d6f64656c73206d7573742062652063757272656e7420726f756e6420616e6420657175616c2e536f75726365206d75737420626520746865206f7261636c65206f662074686520726571756573744f6e6c7920746865206f776e65722063616e20747269676765722061207061796d656e7420636c61696d2e646174612e726f756e645375626d697373696f6e506572666f726d616e63652e726f756e644461696c79506572666f726d616e6365732e302e7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63aa264697066735822122079efabff791ef783ebe410bdb1b06766562494322ccc036652c9ceaf3dde189564736f6c634300060c00334461746120736369656e74697374206d757374207374616b652061746c6561737420302e3031204e4d5220666f7220766572696669636174696f6e20707572706f736573';
const abi = JSON.parse('[  {   "inputs": [    {     "internalType": "string",     "name": "_dataScientistModelName",     "type": "string"    },    {     "internalType": "uint256",     "name": "_costETH",     "type": "uint256"    },    {     "internalType": "uint256",     "name": "_dataScientistStakePromise",     "type": "uint256"    }   ],   "stateMutability": "nonpayable",   "type": "constructor"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "BuyerModelNameRegistered",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "bytes32",     "name": "id",     "type": "bytes32"    }   ],   "name": "ChainlinkCancelled",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "bytes32",     "name": "id",     "type": "bytes32"    }   ],   "name": "ChainlinkFulfilled",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": true,     "internalType": "bytes32",     "name": "id",     "type": "bytes32"    }   ],   "name": "ChainlinkRequested",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "int256",     "name": "",     "type": "int256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "Claimed",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    },    {     "indexed": false,     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "Constructed",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    }   ],   "name": "Kicked",   "type": "event"  },  {   "anonymous": false,   "inputs": [    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    },    {     "indexed": false,     "internalType": "string",     "name": "",     "type": "string"    }   ],   "name": "Locked",   "type": "event"  },  {   "anonymous": false,   "inputs": [],   "name": "Reclaimed",   "type": "event"  },  {   "inputs": [],   "name": "birthStamp",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "buyer",   "outputs": [    {     "internalType": "address payable",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "buyerModelId",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "buyerModelName",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "claim",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "costETH",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistModelId",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistModelName",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistStakeActual",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "dataScientistStakePromise",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "bytes32",     "name": "_APIresult",     "type": "bytes32"    }   ],   "name": "fulfillBuyerModelId",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "uint256",     "name": "_APIresult",     "type": "uint256"    }   ],   "name": "fulfillDataScientistStake",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "int256",     "name": "_APIresult",     "type": "int256"    }   ],   "name": "fulfillFloat",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "int256",     "name": "_APIresult",     "type": "int256"    }   ],   "name": "fulfillGetPayoutPending",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "uint256",     "name": "_APIresult",     "type": "uint256"    }   ],   "name": "fulfillLatestSubmissionRound",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "bytes32",     "name": "_requestId",     "type": "bytes32"    },    {     "internalType": "uint256",     "name": "_APIresult",     "type": "uint256"    }   ],   "name": "fulfillRoundNumber",   "outputs": [],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getHour",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getMinute",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getSecond",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "timestamp",     "type": "uint256"    }   ],   "name": "getWeekday",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "pure",   "type": "function"  },  {   "inputs": [],   "name": "kick",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "latestSubmissionCounter",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "latestSubmissionRounds",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "lock",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [],   "name": "locked",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "metricNames",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "metrics",   "outputs": [    {     "internalType": "int256",     "name": "",     "type": "int256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "modelNames",   "outputs": [    {     "internalType": "string",     "name": "",     "type": "string"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "owner",   "outputs": [    {     "internalType": "address payable",     "name": "",     "type": "address"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "name": "payoutPending",   "outputs": [    {     "internalType": "int256",     "name": "",     "type": "int256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "reclaim",   "outputs": [    {     "internalType": "bool",     "name": "success",     "type": "bool"    }   ],   "stateMutability": "nonpayable",   "type": "function"  },  {   "inputs": [    {     "internalType": "string",     "name": "_buyerModelName",     "type": "string"    }   ],   "name": "registerBuyerModelName",   "outputs": [],   "stateMutability": "payable",   "type": "function"  },  {   "inputs": [],   "name": "roundNumber",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "startTimestamp",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "totalFee",   "outputs": [    {     "internalType": "uint256",     "name": "",     "type": "uint256"    }   ],   "stateMutability": "view",   "type": "function"  },  {   "inputs": [],   "name": "verified",   "outputs": [    {     "internalType": "bool",     "name": "",     "type": "bool"    }   ],   "stateMutability": "view",   "type": "function"  } ]');

function modalPrimary() {
    modalDecision = true;
    console.log(modalDecision);
    $('#gasEstimationFailedModal').modal('toggle');
}

function modalSecondary() {
    modalDecision = false;
    console.log(modalDecision);
    $('#gasEstimationFailedModal').modal('toggle');
}

function setup() {
    console.log("SETUP");
    console.log(window.ethereum);
    if (window.ethereum) {

        console.log("E");
        window.ethereum.enable();

        web3 = new Web3(window.ethereum);
        console.log(web3.eth.accounts.length);
        console.log("A");
        console.log(web3);
        if (!web3) {
            console.log("NW3");
            $('#metaMaskRequiredModal').modal('toggle');
            return;
        }

        console.log("IF REACHED");
        console.log(web3.eth.accounts[0]);
        console.log(account);
        if (web3.eth.accounts[0] !== account) {
            console.log("IF REACHED2");
            console.log("F");
            web3.eth.getAccounts(function(err, accounts) {
                if (err != null) {
                    console.log("D2");
                    //alert("Error retrieving accounts.");
                    $('#metaMaskRequiredModal').modal();
                    return;

                }
                if (accounts.length == 0) {
                    console.log("D");
                    $('#metaMaskRequiredModal').modal();
                    return;
                }

                account = accounts[0];

                console.log('Account: ' + account);
                web3.eth.defaultAccount = account;
            });

        } else {
            console.log("IF12 REACHED");
        }


    } else {
        console.log("IF3 REACHED");
        console.log("No metamask");

        $('#metaMaskRequiredModal').modal('toggle');
        return;
    }


} //, 100);


function setUpCheck(viewB) {
    console.log(viewB);
    if (!web3) {
        console.log("not web3");
        $('#metaMaskRequiredModal').modal('toggle');
        return false;
    }
    if (window.ethereum) {
        console.log("wind eth");
        console.log("webeth");
    } else {
        console.log("not wind eth");
        $('#metaMaskRequiredModal').modal('toggle');
        return false;
    }
    if (!viewB && !contract) {

      console.log(viewB);
        console.log("not view not cont");
        $('#contractRequiredModal').modal('toggle');
        return false;
    }
    console.log("true ret");
    return true;
}

function retreiveContract() {
    console.log("true retA");
    if (!setUpCheck(true)) {
        return;
    }
    console.log("true retB");
    contractAddress = $("#newInfo").val().trim();
    contract = new web3.eth.Contract(abi, $("#newInfo").val().trim());
    console.log(contract);
    document.getElementById("addressLabel").innerHTML = "Contract Address: " + '<a target="_blank" href = "https://kovan.etherscan.io/address/' + $("#newInfo").val() + '">' + $("#newInfo").val().trim() + "</a>";

    contract.methods.dataScientistModelName().call().then(function(info) {
        

        document.getElementById('dataScientistModelNameLabel').innerHTML = "Data Scientist Model Name: " + '<a target="_blank" href = "https://numer.ai/' + String(info) + '">' + String(info) + "</a>";
    });



    contract.methods.costETH().call().then(function(info) {
        

        document.getElementById('costETHLabel').innerHTML = "Contract Cost: " + (new BigNumber(info)).shiftedBy(-18).toString() + " ETH";
        //document.getElementById('costETHLabel').className = document.getElementById('costETHLabel').className +  " text-success";
    });
    contract.methods.dataScientistStakePromise().call().then(function(info) {
        
        
        document.getElementById('dataScientistStakePromiseLabel').innerHTML = "Promised Data Scientist Stake: " + (new BigNumber(info)).shiftedBy(-18).toString() + " NMR";
    });

    contract.methods.dataScientistStakeActual().call().then(function(info) {
        
        if(info != 1)
        {
            document.getElementById('dataScientistStakeActualLabel').innerHTML = "Actual Data Scientist Stake: " + (new BigNumber(info)).shiftedBy(-18).toString() + " NMR";
        }
        else
        {
            document.getElementById('dataScientistStakeActualLabel').innerHTML = "Actual Data Scientist Stake: Not Determined.";
        }
        
    });

    contract.methods.locked().call().then(function(info) {
        

        document.getElementById('lockedLabel').innerHTML = "Locked: " + String(info);
    });

    contract.methods.roundNumber().call().then(function(info) {
        
        if(info != 0)
        {
            document.getElementById('roundNumberLabel').innerHTML = "Round Number: " + String(info);
        }
        else
        {
            document.getElementById('roundNumberLabel').innerHTML = "Round Number: Not Determined";
        }
    });

    contract.methods.birthStamp().call().then(function(info) {
        
        var dateT = new Date(0);
        dateT.setUTCSeconds(info);
        document.getElementById('birthStampLabel').innerHTML = "Birth Date: " + String(dateT.toUTCString().replace("GMT","UTC"));
    });

    contract.methods.startTimestamp().call().then(function(info) {
        
        
        var dateT = new Date(0);
        dateT.setUTCSeconds(info);
        console.log(info == 0);
        startDate = dateT;
        if(info != 0 )
        {
         document.getElementById('startStampLabel').innerHTML = "Start Date: " + String(dateT.toUTCString().replace("GMT","UTC"));
        }
        else
        {
            document.getElementById('startStampLabel').innerHTML = "Start Date: Not Determined";
        }
    });

    contract.methods.buyerModelName().call().then(function(info) {
        
        if(info.length > 0)
        {
            document.getElementById('buyerModelNameLabel').innerHTML = "Buyer Model Name: " + '<a target="_blank" href = "https://numer.ai/' + String(info) + '">' + String(info) + "</a>";
        }
        else
        {
            document.getElementById('buyerModelNameLabel').innerHTML = "Buyer Model Name: Not Determined";
        }
    });

    contract.methods.buyerModelId().call().then(function(info) {
        
        if(info.length > 0)
        {
            document.getElementById('buyerModelIdLabel').innerHTML = "Buyer Model Id: " + String(info);
        }
        else
        {
            document.getElementById('buyerModelIdLabel').innerHTML = "Buyer Model Id: Not Determined";
        }
    });

    contract.methods.metrics(3).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('buyerModelCORRLabel').innerHTML = "Buyer Model Live CORR: " +(new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('buyerModelCORRLabel').innerHTML = "Buyer Model Live CORR: Not Determined";
        }
    });

    contract.methods.metrics(4).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('buyerModelMMCLabel').innerHTML = "Buyer Model Live MMC: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('buyerModelMMCLabel').innerHTML = "Buyer Model Live MMC: Not Determined";
        }
    });

    contract.methods.metrics(5).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('buyerModelFNCLabel').innerHTML = "Buyer Model Live FNC: " +(new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('buyerModelFNCLabel').innerHTML = "Buyer Model Live FNC: Not Determined";
        }
    });

    contract.methods.payoutPending(0).call().then(function(info) {
        

        document.getElementById('buyerModelPendingPayoutLabel').innerHTML = "Buyer Model Live Pending Payout: " + (new BigNumber(info)).shiftedBy(-18).toString();

    });

    contract.methods.metrics(0).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('sellerModelCORRLabel').innerHTML = "Seller Model Live CORR: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('sellerModelCORRLabel').innerHTML = "Seller Model Live CORR: Not Determined";
        }
    });

    contract.methods.metrics(1).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('sellerModelMMCLabel').innerHTML = "Seller Model Live MMC: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('sellerModelMMCLabel').innerHTML = "Seller Model Live MMC: Not Determined";
        }
    });

    contract.methods.metrics(2).call().then(function(info) {
        
        if(info != -1 && info != 1)
        {
            document.getElementById('sellerModelFNCLabel').innerHTML = "Seller Model Live FNC: " + (new BigNumber(info)).shiftedBy(-18).toString();
        }
        else
        {
            document.getElementById('sellerModelFNCLabel').innerHTML = "Seller Model Live FNC: Not Determined";
        }
    });

    contract.methods.payoutPending(1).call().then(function(info) {
        

            document.getElementById('sellerModelPendingPayoutLabel').innerHTML = "Seller Model Live Pending Payout: " + (new BigNumber(info)).shiftedBy(-18).toString();

    });



}

function sendWrapper(method, options) {
    console.log(options);
    txTemp = document.createElement("li");
    //{from: account, value: info }
    method.send(options, function(error, transactionHash) {

        txTemp.className = "list-group-item";
        txTemp.innerHTML = '<a target="_blank" href = "https://kovan.etherscan.io/tx/' + transactionHash + '">' + actionDesc + " " + String(new Date()) + "</a>";

        //alert(transactionHash);

    }).catch(function(e) {
        console.log(e.message);
        if (!(String(e.message) === String("MetaMask Tx Signature: User denied transaction signature."))) {
            document.getElementById("transactionLog").appendChild(txTemp);
        }
        return e;
    }).then(function(e) {
        console.log(e.message);
        if (!(String(e.message) === String("MetaMask Tx Signature: User denied transaction signature."))) {
            document.getElementById("transactionLog").appendChild(txTemp);
        }
    });
}

function gasEstimateCheckModalWrapper(method, runIfAlternate) {
     var caught = false;
    method.estimateGas().catch(function() {
        caught = true;
        $('#gasEstimationFailedModal').modal().on('hidden.bs.modal', function(e) {
            console.log("closed");
            if (!modalDecision) {
                runIfAlternate();

            }
            modalDecision = true;
        });

    }).then(
        
        function() {
          if(caught)
          {
            return;
          }
            runIfAlternate();
        }
    );
}



function registerBuyerName() {
    if (!setUpCheck(false)) {
        return;
    }

    actionDesc = "Register Buyer Name.";
    toTransact = contract.methods.registerBuyerModelName($("#buyerModelNameInput").val().trim());
    gasEstimateCheckModalWrapper(toTransact, function() {
        contract.methods.costETH().call().then(function(info) {
            sendWrapper(toTransact, {
                from: account,
                value: info
            }, actionDesc);



            //document.getElementById('costETHLabel').className = document.getElementById('costETHLabel').className +  " text-success";
        });

    });



}

function reclaim() {
    if (!setUpCheck(false)) {
        return;
    }
    actionDesc = "Reclaim.";
    toTransact = contract.methods.reclaim();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function kick() {
    if (!setUpCheck(false)) {
        return;
    }
    actionDesc = "Kick.";
    toTransact = contract.methods.kick();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function lock() {
    if (!setUpCheck(false)) {
        return;
    }
    actionDesc = "Lock.";
    toTransact = contract.methods.lock();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function claim() {
    if (!setUpCheck(false)) {
        return;
    }
    console.log("contract");
    console.log(contract);
    console.log("account");
    console.log(account);
    actionDesc = "Claim.";
    toTransact = contract.methods.claim();
    gasEstimateCheckModalWrapper(toTransact, function() {
            sendWrapper(toTransact, {
                from: account
            }, actionDesc);
        }


    );
}

function deploy() {
    if (!setUpCheck(true)) {
        return;
    }
    txTemp = document.createElement("li");
    var bcr = bc;
    toDeploy = new web3.eth.Contract(abi, {
        from: account,
        data: bcr
    });
    dSMN = $("#dataScientistModelNameInput").val().trim();
    sP = new BigNumber($("#dataScientistStakePromiseInput").val().trim()).shiftedBy(18);
    cE = new BigNumber($("#costETHInput").val().trim()).shiftedBy(18);
    toDeploy.deploy({
        data: bcr,
        arguments: [dSMN, cE, sP]
    }).send({
        from: account
    }).then(

        function(newContractInstance) {

            txTemp = document.createElement("li");
            txTemp.className = "list-group-item";
            txTemp.innerHTML = '<a target="_blank" href = "https://kovan.etherscan.io/address/' + newContractInstance.options.address + '">' + "Deploy." + " " + String(new Date()) + "</a>";
            document.getElementById("transactionLog").appendChild(txTemp);
            $("#newInfo").val(newContractInstance.options.address);
            retreiveContract();
        }
    );
}

function highlightCalendarColumn(selectedCol)
{
    
    var allTd = document.getElementsByTagName("td");

    for(var i = 0;i < allTd.length;i++)
    {

                allTd[i].style = ""; 

    }
    allTd = document.getElementsByTagName("th");
    for(var i = 0;i < allTd.length;i++)
    {

                allTd[i].style = ""; 

    }

    allTd = document.getElementsByTagName("td");

    for(var i = 0;i < allTd.length;i++)
    {
        if(allTd[i].getAttribute("calendarColumn") !== null && allTd[i].getAttribute("calendarColumn").includes(selectedCol))
        {
            allTd[i].style = "border-style:solid;border-width:2px";
            if(allTd[i].getAttribute("calendarColumn").includes("nb"))
            {
                allTd[i].style = "border-style:solid;border-width:2px;border-bottom:none"; 
            }
        }
    }
    allTd = document.getElementsByTagName("th");
    for(var i = 0;i < allTd.length;i++)
    {
        if(allTd[i].getAttribute("calendarColumn") !== null && allTd[i].getAttribute("calendarColumn").includes(selectedCol))
        {
            allTd[i].style = "border-style:solid;border-width:2px";
            if(allTd[i].getAttribute("calendarColumn").includes("nb"))
            {
                allTd[i].style = "border-style:solid;border-width:2px;border-bottom:none"; 
            }
        }
    }
}

window.addEventListener('load', () => {

    setup();
    //$("#metaMaskRequiredModal").on("hidden.bs.modal",setup);

    console.log("ABC",window.location.href.slice(window.location.href.indexOf("?")+1).length);
    if(window.location.href.slice(window.location.href.indexOf("?")+1).length > 0 && window.location.href.toString().includes("?"))
    {
        console.log("ABC",window.location.href.slice(window.location.href.indexOf("?")+1));
        document.getElementById("newInfo").value = (window.location.href.slice(window.location.href.indexOf("?")+1));
        retreiveContract();
    }

    var calendarInterval = setInterval(
    function()
    {
        var d = new Date();



        var n = d.toUTCString();
        console.log(n);
        document.getElementById("UTCclock").innerHTML = n.replace("GMT","UTC");
        if(startDate !== undefined && startDate.getTime() !== 0)
        {
            console.log("have startdate",startDate);
            console.log(startDate.getTime(),d.getTime());
            
            var elapsed = (d.getTime() - startDate.getTime())/3600000;

            //highlightCalendarColumn("" + (d.getDay() + 1))
            console.log("UTC DEB HOURS",typeof d.getUTCHours());
            if(elapsed > 198)
            {
                highlightCalendarColumn("9");
            }
            else
            {
                switch(d.getUTCDay())
            {
                case 0:
                    if(elapsed > 48)
                    {
                        highlightCalendarColumn("8");
                    }
                    else
                    {
                        highlightCalendarColumn("1");
                    }
                    break;

                case 1:
                    console.log("UTC HOURS",d.getUTCHours());
                     if(d.getUTCHours() <=13)
                    {
                        highlightCalendarColumn("2");
                    }
                    else
                    {
                        console.log("SHRIMP");
                    }
                    break;

                case 2:
                    highlightCalendarColumn("4");
                    break;

                case 3:
                    highlightCalendarColumn("5");
                    break;
                
                case 4:
                    highlightCalendarColumn("6");
                    break;

                case 5:
                    highlightCalendarColumn("7");
                    break;
                
                case 6:
                    if(elapsed > 48)
                    {
                        highlightCalendarColumn("8");
                    }
                    else
                    {
                        if(d.getUTCHours >= 18)
                        {
                            highlightCalendarColumn("0");
                        }
                    }
                    break;
                


            }
            }
            


        }
    },500);


});
